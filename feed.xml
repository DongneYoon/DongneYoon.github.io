<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ASKING BLOG</title>
  
  <subtitle>THE WISE QUESTION IS HALF OF WISDOM.</subtitle>
  <link href="/feed.xml" rel="self"/>
  
  <link href="https://slim8020.github.io/"/>
  <updated>2021-05-14T05:10:10.952Z</updated>
  <id>https://slim8020.github.io/</id>
  
  <author>
    <name>slim8020</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>이벤트와 이벤트 핸들러 정리</title>
    <link href="https://slim8020.github.io/2021/05/14/event/"/>
    <id>https://slim8020.github.io/2021/05/14/event/</id>
    <published>2021-05-14T04:42:03.000Z</published>
    <updated>2021-05-14T05:10:10.952Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/Thumbnail/event.png" alt=""></p><p>웹 상에서 발생하는 이벤트들을 정리 해 본다. </p><h2 id="마우스-이벤트"><a href="#마우스-이벤트" class="headerlink" title="마우스 이벤트"></a>마우스 이벤트</h2><p>마우스 조작 시 발생하는 이벤트</p><table><thead><tr><th>종류</th><th>설명</th></tr></thead><tbody><tr><td>click</td><td>html 요소를 클릭할 때 이벤트 발생</td></tr><tr><td>dbclick</td><td>html 요소를 더블 클릭할 때 이벤트 발생</td></tr><tr><td>mousedown</td><td>마우스 버튼을 눌렀을 때 이벤트 발생</td></tr><tr><td>mousemove</td><td>마우스 포인터를 움직였을 때 이벤트 발생</td></tr><tr><td>mouseover</td><td>마우스 포인터가 요소 위로 옮겨질 때 이벤트 발생</td></tr><tr><td>mouseout</td><td>마우스 포인터가 요소에서 벗어났을 때 이벤트 발생</td></tr><tr><td>mouseup</td><td>마우스 버튼을 눌렀다가 떼었을 때 이벤트 발생</td></tr></tbody></table><h2 id="키보드-이벤트"><a href="#키보드-이벤트" class="headerlink" title="키보드 이벤트"></a>키보드 이벤트</h2><p>키보드에서 특정키를 조작할 때 발생하는 이벤트</p><table><thead><tr><th>종류</th><th>설명</th></tr></thead><tbody><tr><td>keydown</td><td>키보드 키를 누르는 동안 이벤트 발생</td></tr><tr><td>keypress</td><td>키보드 키를 눌렀을 때 이벤트 발생</td></tr><tr><td>keyup</td><td>키보드 키를 눌렀다가 뗄 때 이벤트 발생</td></tr></tbody></table><h2 id="문서로딩-이벤트"><a href="#문서로딩-이벤트" class="headerlink" title="문서로딩 이벤트"></a>문서로딩 이벤트</h2><p>서버에서 웹 문서를 가져오거나 조작하였을 때 발생하는 이벤트</p><table><thead><tr><th>종류</th><th>설명</th></tr></thead><tbody><tr><td>abort</td><td>문서가 모두 로딩되기 전 로딩을 멈췄을 때 발생</td></tr><tr><td>error</td><td>문서가 정확히 로딩이 되지 않았을 때 발생</td></tr><tr><td>load</td><td>문서 로딩이 끝나면 발생</td></tr><tr><td>resize</td><td>문서 화면의 크기가 바뀌었을 때 이벤트 발생</td></tr><tr><td>scroll</td><td>문서가 스크롤 될때 이벤트 발생</td></tr><tr><td>unload</td><td>문서에서 벗어날때 이벤트 발생</td></tr></tbody></table><h2 id="폼-이벤트"><a href="#폼-이벤트" class="headerlink" title="폼 이벤트"></a>폼 이벤트</h2><p>폼 요소에 입력이 생기거나 변경이 생겼을 때 발생하는 이벤트</p><table><thead><tr><th>종류</th><th>설명</th></tr></thead><tbody><tr><td>blur</td><td>폼 요소에서 포커스를 잃었을 때 이벤트 발생</td></tr><tr><td>change</td><td>목록이나 체크 상태 등이 변경 되면 발생</td></tr><tr><td>focus</td><td>요소에 포커스가 놓였을 때 이벤트 발생</td></tr><tr><td>reset</td><td>폼이 리셋 되었을 때 발생</td></tr><tr><td>submit</td><td>submit 버튼을 클릭 했을 때 발생</td></tr></tbody></table><h2 id="이벤트-핸들러-이벤트-처리기"><a href="#이벤트-핸들러-이벤트-처리기" class="headerlink" title="이벤트 핸들러 (이벤트 처리기)"></a>이벤트 핸들러 (이벤트 처리기)</h2><p>이벤트가 발생하면 실행 하는 동작 정의</p><ol><li><p>직접 연결 하기<br>HTML 에서 직접 연결 하는 방식<br>예)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;#&quot; onclick=&quot;alert(&apos;click!&apos;)&quot;&gt; click me! &lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>DOM 으로 연결 하기<br>자바스크립트에서 선택자를 통해 언어온 값에 이벤트 연결 하기<br>예)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var a = document.querySelector(&quot;#test&quot;);</span><br><span class="line">a.onclick = changeValue;</span><br><span class="line"></span><br><span class="line">function changeValue()&#123;</span><br><span class="line">    document.querySelector(&quot;p&quot;).style.color = &quot;#fff&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/Thumbnail/event.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;웹 상에서 발생하는 이벤트들을 정리 해 본다. &lt;/p&gt;
&lt;h2 id=&quot;마우스-이벤트&quot;&gt;&lt;a href=&quot;#마우스-이벤트&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="프론트엔드" scheme="https://slim8020.github.io/categories/%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C/"/>
    
    
      <category term="web" scheme="https://slim8020.github.io/tags/web/"/>
    
      <category term="javascript" scheme="https://slim8020.github.io/tags/javascript/"/>
    
      <category term="frontend" scheme="https://slim8020.github.io/tags/frontend/"/>
    
      <category term="이벤트" scheme="https://slim8020.github.io/tags/%EC%9D%B4%EB%B2%A4%ED%8A%B8/"/>
    
      <category term="event" scheme="https://slim8020.github.io/tags/event/"/>
    
  </entry>
  
  <entry>
    <title>설명하는 글쓰는 방법</title>
    <link href="https://slim8020.github.io/2021/05/14/explain/"/>
    <id>https://slim8020.github.io/2021/05/14/explain/</id>
    <published>2021-05-14T04:37:03.000Z</published>
    <updated>2021-05-14T04:44:37.471Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/Thumbnail/explain.png" alt=""></p><h1 id="설명하는-글을-쓰는-방법"><a href="#설명하는-글을-쓰는-방법" class="headerlink" title="설명하는 글을 쓰는 방법"></a>설명하는 글을 쓰는 방법</h1><h2 id="요령"><a href="#요령" class="headerlink" title="요령"></a>요령</h2><ol><li>처음, 가운데, 끝 세부분으로 나누어 쓴다.</li><li>무엇에 대하여, 누구에게 쓸 것인가를 정한다.</li><li>설명하고자 하는 내용을 분명하게 나타낼 수 있도록 문장을 간결하게 쓴다.</li><li>알기 쉬운 말로 쓴다.</li><li>자기 주장이나 느낌이 들어가면 안되고 사살민을 쓴다.</li><li>설명할 대상에 대하여 기준을 정하고 몇가지로 나누거나 순서를 정하여 쓴다.</li></ol><h2 id="짜임"><a href="#짜임" class="headerlink" title="짜임"></a>짜임</h2><ol><li>처음 : 무엇에 대하여 누구를 대상으로 어떻게 설명하겠다는 것을 밝힌다. (설명 대상, 동기, 목적 제시)</li><li>가운데 : 설명하고자 하는 대상에 대하여 기준을 정하고, 몇가지로 나누어 그 특징을 알기 쉽게 쓴다. (설명 대상에 대한 구체적인 설명)</li><li>끝 : 설명한 내용을 간단하게 정리하면서 글쓴이의 의견도 쓴다. (내용 요약, 정리, 평가)</li></ol><h2 id="설명하는-방식"><a href="#설명하는-방식" class="headerlink" title="설명하는 방식"></a>설명하는 방식</h2><ol><li>정의 : 어떤 말이나 사물의 뜻을 명백히 밝히는 것</li><li>예시 : 구체적인 예를 들어 설명하는 것</li><li>비교 : 어떤 대상을 다른 것과의 공통점을 들어 설명하는 것</li><li>대조 : 어떤 대상을 다른 것과의 차이점을 들어 설명하는 것</li><li>분류 : 대상을 일정한 기준에 따라 부분별로 나누거나 공통성을 가진 대상들을 하나의 종류 속에 묶어서 설명하는 것</li><li>분석 : 하나의 대상을 부분으로 나누어 설명하는 방법</li><li>인과 : 원인과 결과를 관련지어 설명하는 것</li></ol><p>출처)<br><a href="https://m.blog.naver.com/PostView.nhn?blogId=lmajo2000&amp;logNo=220528736126&amp;proxyReferer=https:%2F%2Fwww.google.com%2F" target="_blank" rel="noopener">https://m.blog.naver.com/PostView.nhn?blogId=lmajo2000&amp;logNo=220528736126&amp;proxyReferer=https:%2F%2Fwww.google.com%2F</a><br><a href="https://m.blog.naver.com/2620950/221101311763" target="_blank" rel="noopener">https://m.blog.naver.com/2620950/221101311763</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/Thumbnail/explain.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;설명하는-글을-쓰는-방법&quot;&gt;&lt;a href=&quot;#설명하는-글을-쓰는-방법&quot; class=&quot;headerlink&quot; title=&quot;설명하는 글을 쓰는 방법
      
    
    </summary>
    
      <category term="에세이" scheme="https://slim8020.github.io/categories/%EC%97%90%EC%84%B8%EC%9D%B4/"/>
    
    
      <category term="writing" scheme="https://slim8020.github.io/tags/writing/"/>
    
      <category term="essay" scheme="https://slim8020.github.io/tags/essay/"/>
    
      <category term="explain" scheme="https://slim8020.github.io/tags/explain/"/>
    
      <category term="설명하기" scheme="https://slim8020.github.io/tags/%EC%84%A4%EB%AA%85%ED%95%98%EA%B8%B0/"/>
    
      <category term="설명하는글쓰는방법" scheme="https://slim8020.github.io/tags/%EC%84%A4%EB%AA%85%ED%95%98%EB%8A%94%EA%B8%80%EC%93%B0%EB%8A%94%EB%B0%A9%EB%B2%95/"/>
    
  </entry>
  
  <entry>
    <title>5월 14일</title>
    <link href="https://slim8020.github.io/2021/05/14/diary_0514/"/>
    <id>https://slim8020.github.io/2021/05/14/diary_0514/</id>
    <published>2021-05-14T04:24:03.000Z</published>
    <updated>2021-05-14T04:37:14.202Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/Thumbnail/diary_0514.png" alt=""></p><h2 id="절약을-잘-했는가-낭비한-것은-없는가"><a href="#절약을-잘-했는가-낭비한-것은-없는가" class="headerlink" title="절약을 잘 했는가? 낭비한 것은 없는가?"></a>절약을 잘 했는가? 낭비한 것은 없는가?</h2><p>어제는 하루종일 열심히 블로그를 쓰고, 주식도 하고, 자바스크립트 리뷰를 해서 나를 위한 선물로 혼술을 하였다.<br>메뉴는 회와 소주였다. 고생한 나를 위한 선물이긴 하지만 배달음식은 언제나 아깝다. 25000원 정도 들었는데,<br>밖에서 누군가를 만나서 술 한잔 하면 그정도 나온다. 그렇다고 더 맛있거나 더 많이 먹는 것도 아니다.<br>나를 위한 선물로 혼술 보다는 누군가를 만나는 걸로 하는게 좋을 것 같다. </p><h2 id="게으르지는-않았는가-근면성실"><a href="#게으르지는-않았는가-근면성실" class="headerlink" title="게으르지는 않았는가? (근면성실)"></a>게으르지는 않았는가? (근면성실)</h2><p>요새 게으른 적이 한번도 없는 것 같다. 하루종일 컴퓨터 앞에 앉아서 글을 쓰거나 회사를 분석하거나<br>웹 개발 공부를 하니 말이다. 심지어 이번주에는 웹툰 조차 보지 않았다. 자기 전에 게임 한두판 하는게 전부다.<br>회사 일하는 것 이외에 나를 위한 일을 이렇게 열심히 해본게 얼마만이던가..</p><h2 id="건강한-삶을-위해-어떤-노력을-하였는가-청소-요리-금주-운동"><a href="#건강한-삶을-위해-어떤-노력을-하였는가-청소-요리-금주-운동" class="headerlink" title="건강한 삶을 위해 어떤 노력을 하였는가? (청소, 요리, 금주, 운동)"></a>건강한 삶을 위해 어떤 노력을 하였는가? (청소, 요리, 금주, 운동)</h2><p>요새 운동도 안하는데, 오히려 아픈데가 없다. 항상 등이 아프거나 컨디션이 안 좋았는데..<br>술을 안 마셔서 그런 것일까? 어제는 한잔 하긴 했지만 적당히 마시고 자서 컨디션은 좋다.<br>다만 날이 덥고 모기도 생기고 해서 수면에 방해가 좀 되는 것 같다.<br>어제는 김치 볶음을 하려고 하다가 대신 배추 된장찌개를 끓였다. 오늘 점심을 끝으로 다 먹어서<br>김치 볶음을 좀 해야 겠다. (아.. 저녁 때 떡볶이 하려고 했는데..)</p><h2 id="즐겁게-살고-있는가-시간을-보람되게-보냈는가-사람들과-좋은-관계를-맺고-있는가-원하는-일을-하고-있는가"><a href="#즐겁게-살고-있는가-시간을-보람되게-보냈는가-사람들과-좋은-관계를-맺고-있는가-원하는-일을-하고-있는가" class="headerlink" title="즐겁게 살고 있는가? ( 시간을 보람되게 보냈는가? 사람들과 좋은 관계를 맺고 있는가? 원하는 일을 하고 있는가?)"></a>즐겁게 살고 있는가? ( 시간을 보람되게 보냈는가? 사람들과 좋은 관계를 맺고 있는가? 원하는 일을 하고 있는가?)</h2><p>어제 네이버 블로그 하루 방문자 200명을 돌파했다. 6월초까지만 이 추세로 가면 네이버 애드포스트를 달 수가 있다.<br>네이버 블로거 중 존경스러운 사람이 있는데, 그 사람도 개발자 인듯 했다. 블로그 주제는 경제, 주식에 대한 것이다.<br>글의 내용을 보면 쉽게 이해가 된다. 글을 잘 쓰는 것 같다. 하루 방문자는 2만명에서 5만명정도 까지 되는 것 같았다.<br>근데 수익을 보니 100만원이 안되는 것 같았다. 블로그 주제에 대해서 약간 고민이 많은데, 효율에 대한 부분 때문이다.<br>아무리 내가 좋은 글을 써도 주제 자체가 사람들이 관심을 갖지 않는 것이라고 한다면 유입률은 떨어질 수 밖에 없을 것이기 때문이다.<br>근데 내가 왜 블로그를 시작 했더라? 유입자 모으기 인가?</p><h2 id="성장을-위해-어떤-노력을-하였는가-기록-정리-복기-습관화"><a href="#성장을-위해-어떤-노력을-하였는가-기록-정리-복기-습관화" class="headerlink" title="성장을 위해 어떤 노력을 하였는가? (기록, 정리, 복기, 습관화)"></a>성장을 위해 어떤 노력을 하였는가? (기록, 정리, 복기, 습관화)</h2><p>오늘은 앱을 하나 리뷰 하였다. 사진이 많아서 글이 좀 길어 보이지만, 그렇게 자세하게 글을 쓰지는 못헀다.<br>뭔가를 분석하고 설명하는 글을 잘 쓰고 싶은데, 방법을 잘 모르겠어서 어제 검색을 했다.<br>초등학교 고학년이나 중학교 저학년때 국어시간에 배우는 내용중에 설명하는 글쓰기가 있었다.<br>내가 잊고 살았구나 너무 오래전에 배운 것이라..<br>설명하는 글쓰기에 대해서 정리를 한번 해보고 자주 써보도록 노력 해 봐야 겠다.</p><p>개선포인트 : 설명하는 글쓰는 방법을 조사하고, 연습 하기</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/Thumbnail/diary_0514.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;절약을-잘-했는가-낭비한-것은-없는가&quot;&gt;&lt;a href=&quot;#절약을-잘-했는가-낭비한-것은-없는가&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
      <category term="일상" scheme="https://slim8020.github.io/categories/%EC%9D%BC%EC%83%81/"/>
    
    
      <category term="Saving" scheme="https://slim8020.github.io/tags/Saving/"/>
    
      <category term="Diligence" scheme="https://slim8020.github.io/tags/Diligence/"/>
    
      <category term="health" scheme="https://slim8020.github.io/tags/health/"/>
    
      <category term="Joy" scheme="https://slim8020.github.io/tags/Joy/"/>
    
      <category term="Growth" scheme="https://slim8020.github.io/tags/Growth/"/>
    
      <category term="Diary" scheme="https://slim8020.github.io/tags/Diary/"/>
    
  </entry>
  
  <entry>
    <title>자바스크립트의 변수 및 함수 특이사항</title>
    <link href="https://slim8020.github.io/2021/05/13/js_variable/"/>
    <id>https://slim8020.github.io/2021/05/13/js_variable/</id>
    <published>2021-05-13T07:42:03.000Z</published>
    <updated>2021-05-13T08:10:18.087Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/Thumbnail/variable_function.png" alt=""></p><h2 id="Javascript-변수의-특이사항"><a href="#Javascript-변수의-특이사항" class="headerlink" title="Javascript 변수의 특이사항"></a>Javascript 변수의 특이사항</h2><h3 id="var-의-문제점"><a href="#var-의-문제점" class="headerlink" title="var 의 문제점"></a>var 의 문제점</h3><ul><li>var 예약어를 빠뜨리면 전역변수가 된다.</li><li>중간에 변수를 재선언 해버리거나, 재할당 해버려서 값을 예측하기 하기 어렵다. &gt; 버그 발생</li></ul><h3 id="let-과-const"><a href="#let-과-const" class="headerlink" title="let 과 const"></a>let 과 const</h3><p>var : 함수 레벨의 스코프<br>let, const : 블록 레벨({…})의 스코프</p><p>let 도 마찬가지로 예약어를 쓰지 않으면 전역변수<br>재할당은 가능하지만 재선언할 경우 컴파일 오류 발생<br>var 의 경우 선언 전에 실행하면 해당 값으로 undefined 를 가지고 있음.<br>하지만 let 은 선언전에 사용할 수 없음 (=호이스팅이 없음)</p><p>const 는 상수 변수(constant variable)<br>const 는 재선언, 재할당 모두 불가. 블록 레벨의 스코프를 가짐.</p><h3 id="자바-스크립트에서-변수-사용시-주의-사항"><a href="#자바-스크립트에서-변수-사용시-주의-사항" class="headerlink" title="자바 스크립트에서 변수 사용시 주의 사항"></a>자바 스크립트에서 변수 사용시 주의 사항</h3><ol><li>전역변수는 최소화</li><li>var 변수를 사용할 경우 무조건 함수 시작 부분에서 선언할 것.</li><li>for 문 안에서 카운터로 사용되는 변수의 경우 var 를 사용하지 말것.</li><li>ES6 의 경우 let 를 사용할 것.</li></ol><h3 id="익명함수-Anonymous-function"><a href="#익명함수-Anonymous-function" class="headerlink" title="익명함수 (Anonymous function)"></a>익명함수 (Anonymous function)</h3><p>익명함수는 예전 C++에서는 보지 못했었고(한 5년전쯤인데.. 요새는 많이 사용하나?), C#에서는 있었는데 Javascript 에도 익명함수 개념이 있다. (반대로 전파된건가?)<br>함수명을 사용하지 않고 선언한 변수명으로 사용. </p><h3 id="즉시실행함수-Immediately-invoked-function-expression"><a href="#즉시실행함수-Immediately-invoked-function-expression" class="headerlink" title="즉시실행함수 (Immediately-invoked function expression)"></a>즉시실행함수 (Immediately-invoked function expression)</h3><p>일반적으로 함수를 선언하고 정의 한 후, 호출하여 사용하는 반면<br>함수를 정의 하면서 동시에 실행하는 함수.</p><h3 id="화살표함수-Arrow-function-expression-Lambda"><a href="#화살표함수-Arrow-function-expression-Lambda" class="headerlink" title="화살표함수 (Arrow function expression = Lambda)"></a>화살표함수 (Arrow function expression = Lambda)</h3><p>ES6 부터 =&gt;표기법 (화살표 표기법) 사용 가능.<br>화살표 함수를 사용하면 간략하게 표현 가능.</p><p>일반 함수<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">let hi=&quot;&quot;;</span><br><span class="line">function abc()&#123;</span><br><span class="line">     return &quot;hello!&quot;;</span><br><span class="line">&#125;</span><br><span class="line">hi = abc();</span><br><span class="line">document.write(hi);</span><br></pre></td></tr></table></figure></p><p>익명 함수<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">const hi = function()&#123;</span><br><span class="line">     return &quot;hello!&quot;;</span><br><span class="line"> &#125;</span><br><span class="line">document.write(hi.name);</span><br></pre></td></tr></table></figure></p><p>화살표 함수<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">const hi = () =&gt;&#123;</span><br><span class="line">    return &quot;hello!&quot;;</span><br><span class="line">&#125;</span><br><span class="line">document.write(hi.name);</span><br></pre></td></tr></table></figure></p><p>화살표 함수 - 중괄호 생략<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">const hi = () =&gt; &quot;hello!&quot;;</span><br><span class="line">document.write(hi.name);</span><br></pre></td></tr></table></figure></p><p>즉시실행함수 - 매개변수 1개<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(function abc(user)&#123;</span><br><span class="line">    document.write(user + &quot;, What up~&quot;);</span><br><span class="line">&#125;)(&quot;slim8020&quot;);</span><br></pre></td></tr></table></figure></p><p>화살표 함수 - 매개변수 1개<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let hi = user =&gt; &#123; document.write(user + &quot;, what up~&quot;); &#125;</span><br><span class="line">hi(&quot;slim8020&quot;);</span><br></pre></td></tr></table></figure></p><p>화살표 함수 - 매개변수 2개<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">let sum = (a,b) =&gt; a+b;</span><br><span class="line">document.write(sum(1,2));</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/Thumbnail/variable_function.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Javascript-변수의-특이사항&quot;&gt;&lt;a href=&quot;#Javascript-변수의-특이사항&quot; class=&quot;headerlink
      
    
    </summary>
    
      <category term="프론트엔드" scheme="https://slim8020.github.io/categories/%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C/"/>
    
    
      <category term="web" scheme="https://slim8020.github.io/tags/web/"/>
    
      <category term="javascript" scheme="https://slim8020.github.io/tags/javascript/"/>
    
      <category term="frontend" scheme="https://slim8020.github.io/tags/frontend/"/>
    
      <category term="화살표함수" scheme="https://slim8020.github.io/tags/%ED%99%94%EC%82%B4%ED%91%9C%ED%95%A8%EC%88%98/"/>
    
      <category term="익명함수" scheme="https://slim8020.github.io/tags/%EC%9D%B5%EB%AA%85%ED%95%A8%EC%88%98/"/>
    
      <category term="즉시실행함수" scheme="https://slim8020.github.io/tags/%EC%A6%89%EC%8B%9C%EC%8B%A4%ED%96%89%ED%95%A8%EC%88%98/"/>
    
      <category term="const" scheme="https://slim8020.github.io/tags/const/"/>
    
      <category term="let" scheme="https://slim8020.github.io/tags/let/"/>
    
      <category term="var" scheme="https://slim8020.github.io/tags/var/"/>
    
  </entry>
  
  <entry>
    <title>Github 퍼미션 에러로 Push가 안되는 에러 해결 방법</title>
    <link href="https://slim8020.github.io/2021/05/13/github_permission/"/>
    <id>https://slim8020.github.io/2021/05/13/github_permission/</id>
    <published>2021-05-13T01:49:03.000Z</published>
    <updated>2021-05-13T01:58:23.367Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/Thumbnail/github_permission.png" alt=""></p><p>Logon failed, use ctrl+c to cancel basic credential prompt.</p><p>remote: Permission to (깃헙주소) denied to (아이디).</p><p>아래와 같은 메세지로 지속적으로 삽질을 하고 있었다.<br>​<img src="/img/github_permission/git1.png" alt="푸시가 안되는 메세지"></p><p>퍼미션 문제라고 하여, 다른 깃헙 리포지토리에서 사용하고 있는 계정과 충돌인가 해서 계정을 바꿔 주었다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br><span class="line">git config user.password</span><br></pre></td></tr></table></figure><h3 id="해결이-안됨"><a href="#해결이-안됨" class="headerlink" title=" 해결이 안됨!! "></a><span style="color:#FF008C"> 해결이 안됨!! <span></span></span></h3><p>그래서 윈도우 자격 증명을 바꿔 주었다. </p><p>제어판 &gt; 사용자 계정 &gt; 자격 증명 관리자</p><p>​<img src="/img/github_permission/git2.png" alt="자격 증명 관리자"></p><p>자격 증명 중에 git 관련 자격 증명을 찾았다. 편집을 눌러서 깃계정와 패스워드를 입력 하였다.</p><p>​<img src="/img/github_permission/git3.png" alt="일반 자격 증명 편집"></p><h3 id="해결-안됨"><a href="#해결-안됨" class="headerlink" title="해결 안됨."></a><span style="color:#FF008C">해결 안됨.<span></span></span></h3><p>대신 github 의 로그인 창이 출력되고 아래와 같이 메세지가 바뀌었다.</p><p><img src="/img/github_permission/git4.png" alt="변경된 메세지"></p><p>git 이 업데이트 안되어서 그럴 수도 있기 때문에 </p><p>git을 업데이트 해 보았다.</p><p>git update-git-for-windows<br>​<img src="/img/github_permission/git5.png" alt="git update"></p><h3 id="해결됨"><a href="#해결됨" class="headerlink" title="해결됨!!!!"></a><span style="color:#FF008C">해결됨!!!!</span></h3><p>​<img src="/img/github_permission/git6.png" alt="결과"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/Thumbnail/github_permission.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Logon failed, use ctrl+c to cancel basic credential prompt.&lt;/p&gt;
&lt;p&gt;remote:
      
    
    </summary>
    
      <category term="개발환경" scheme="https://slim8020.github.io/categories/%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD/"/>
    
    
      <category term="github" scheme="https://slim8020.github.io/tags/github/"/>
    
      <category term="permission" scheme="https://slim8020.github.io/tags/permission/"/>
    
      <category term="error" scheme="https://slim8020.github.io/tags/error/"/>
    
      <category term="퍼미션에러" scheme="https://slim8020.github.io/tags/%ED%8D%BC%EB%AF%B8%EC%85%98%EC%97%90%EB%9F%AC/"/>
    
      <category term="깃헙" scheme="https://slim8020.github.io/tags/%EA%B9%83%ED%97%99/"/>
    
      <category term="푸시에러" scheme="https://slim8020.github.io/tags/%ED%91%B8%EC%8B%9C%EC%97%90%EB%9F%AC/"/>
    
      <category term="푸시안됨" scheme="https://slim8020.github.io/tags/%ED%91%B8%EC%8B%9C%EC%95%88%EB%90%A8/"/>
    
  </entry>
  
  <entry>
    <title>5월 13일</title>
    <link href="https://slim8020.github.io/2021/05/13/diary_0513/"/>
    <id>https://slim8020.github.io/2021/05/13/diary_0513/</id>
    <published>2021-05-13T01:28:03.000Z</published>
    <updated>2021-05-13T01:51:56.237Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/Thumbnail/diary_0513.png" alt=""></p><h2 id="절약을-잘-했는가-낭비한-것은-없는가"><a href="#절약을-잘-했는가-낭비한-것은-없는가" class="headerlink" title="절약을 잘 했는가? 낭비한 것은 없는가?"></a>절약을 잘 했는가? 낭비한 것은 없는가?</h2><p>집 밖에 나가지 않은지 4일째. 돈 쓸 일이 없다. 우선 소비는 잡은 듯 하다.<br>역시 사람만 만나지 않아도 절약이 된다. 보복소비가 요새 유행인데, 하고 싶은 것만 하면서 지내니 보복 소비도 없다. (보복소비 관련주에 관심을 가지고 있다.) 이 또한 자연스럽다. 배달음식도 먹지 않고, 술도 마시지 않는다. 이상하게도 스트레스를 받지 않는다. 잠깐잠깐 하는 게임이 즐겁다. </p><h2 id="게으르지는-않았는가-근면성실"><a href="#게으르지는-않았는가-근면성실" class="headerlink" title="게으르지는 않았는가? (근면성실)"></a>게으르지는 않았는가? (근면성실)</h2><p>예전에는 아침에 눈을 뜨면 무엇을 해야 할지 잘 모르거나, 하기 싫어서 다시 침대에 들어가곤 했는데,<br>지금은 자연스럽게 컴퓨터 앞에 앉는다. 우선 뉴스를 본다. 경제 상황이 뭐가 바뀐게 있는지 어제 해외 주식은<br>어떻게 됐는지.. 요 며칠 사에 다우와 나스닥이 좋지 않아서 주가도 파란불 일색이다. (이런 걸 느끼고 알게 되다니.. ) 운동도 많이 하지 않고 하루종일 컴퓨터에만 매달려 있지만 게으르다는 생각은 들지 않는다.<br>청소나 설거지 등 집안일도 해가면서 하니까.. 하루가 정말 어떻게 가는지 모를 정도로 바쁘다.<br>근면 성실의 기준, 게으름의 기준이 무엇인지 다시 한번 생각해 보게 된다. </p><h2 id="건강한-삶을-위해-어떤-노력을-하였는가-청소-요리-금주-운동"><a href="#건강한-삶을-위해-어떤-노력을-하였는가-청소-요리-금주-운동" class="headerlink" title="건강한 삶을 위해 어떤 노력을 하였는가? (청소, 요리, 금주, 운동)"></a>건강한 삶을 위해 어떤 노력을 하였는가? (청소, 요리, 금주, 운동)</h2><p>오늘은 반찬을 좀 만들어야 할 것 같다. 아직 오이 무침 만들어 놓은게 남긴 했지만 반찬이 별로 없어서..<br>묵은 김치를 씻어서 김치 볶음을 좀 해야 겠다.<br>연속 4일째 술은 마시지 않고 있다. 어제는 운동을 빼먹긴 했는데, 틈틈히 하고 있다. 살을 빼고 싶은 마음도 있지만, 그렇다고 흐름을 역행 해서 억지로 하고 싶지는 않다.</p><h2 id="즐겁게-살고-있는가-시간을-보람되게-보냈는가-사람들과-좋은-관계를-맺고-있는가-원하는-일을-하고-있는가"><a href="#즐겁게-살고-있는가-시간을-보람되게-보냈는가-사람들과-좋은-관계를-맺고-있는가-원하는-일을-하고-있는가" class="headerlink" title="즐겁게 살고 있는가? ( 시간을 보람되게 보냈는가? 사람들과 좋은 관계를 맺고 있는가? 원하는 일을 하고 있는가?)"></a>즐겁게 살고 있는가? ( 시간을 보람되게 보냈는가? 사람들과 좋은 관계를 맺고 있는가? 원하는 일을 하고 있는가?)</h2><p>뭔가 하나하나 만들어지고 배우는 게 있으니 바쁘더라도 보람을 느낀다. 사람을 만나지는 못하지만 블로그를 쓰면서 다양한 사람들의 글을 읽고 있다. 그리고 글을 쓰려고 노력 하고 있다. 나는 개발자가 아니라 작가가 되고 싶었던걸까? 아니 블로거 인가? 오늘은 주식 상황도 좋지 않으니 제껴 두고 책이나 읽고 글이나 써야겠다. </p><h2 id="성장을-위해-어떤-노력을-하였는가-기록-정리-복기-습관화"><a href="#성장을-위해-어떤-노력을-하였는가-기록-정리-복기-습관화" class="headerlink" title="성장을 위해 어떤 노력을 하였는가? (기록, 정리, 복기, 습관화)"></a>성장을 위해 어떤 노력을 하였는가? (기록, 정리, 복기, 습관화)</h2><p>글쓰기. 그것이 문제로다. 처음 블로그를 쓰고 일기를 쓸 떄보다는 훨씬 나아졌다고 생각이 든다. 하루에 써내는 글이 많아지고 있다는 것을 느낀다. 또한 매일매일 꾸준히 일기를 아침에 쓰고 있으니 그것 또한 만족스럽다. 밤에 일기를 자꾸 안 쓰게 되니 일어나자마자 쓰는 걸로 바꿨는데 그게 신의 한수였던 것 같다.<br>나만의 패턴을 찾아나가는 것 같아서 좋다.<br>어제는 HTML, CSS 를 한번 쭉 리뷰를 끝내고 Javascript 를 보기 시작했다.<br>jQuery 를 보지는 않았지만, 우리 팀에 있던 퍼블리셔들이 어떤 고민들이 있었는지 느낄 수 있는 기회였다.<br>퍼블리셔의 성장에 대한 어려움, 막막함을 알 수 있을 것 같았다. </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/Thumbnail/diary_0513.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;절약을-잘-했는가-낭비한-것은-없는가&quot;&gt;&lt;a href=&quot;#절약을-잘-했는가-낭비한-것은-없는가&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
      <category term="일상" scheme="https://slim8020.github.io/categories/%EC%9D%BC%EC%83%81/"/>
    
    
      <category term="diary" scheme="https://slim8020.github.io/tags/diary/"/>
    
      <category term="Saving" scheme="https://slim8020.github.io/tags/Saving/"/>
    
      <category term="Diligence" scheme="https://slim8020.github.io/tags/Diligence/"/>
    
      <category term="health" scheme="https://slim8020.github.io/tags/health/"/>
    
      <category term="Joy" scheme="https://slim8020.github.io/tags/Joy/"/>
    
      <category term="Growth" scheme="https://slim8020.github.io/tags/Growth/"/>
    
  </entry>
  
  <entry>
    <title>5월 12일</title>
    <link href="https://slim8020.github.io/2021/05/12/Diary_0512/"/>
    <id>https://slim8020.github.io/2021/05/12/Diary_0512/</id>
    <published>2021-05-12T09:45:03.000Z</published>
    <updated>2021-05-13T01:51:56.226Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/Thumbnail/diary_0512.png" alt=""></p><h2 id="절약을-잘-했는가-낭비한-것은-없는가"><a href="#절약을-잘-했는가-낭비한-것은-없는가" class="headerlink" title="절약을 잘 했는가? 낭비한 것은 없는가?"></a>절약을 잘 했는가? 낭비한 것은 없는가?</h2><p>2끼만 먹고 술도 마시지 않고, 하루종일 블로그와 주식과 씨름 하였다. 집에만 있으니 돈 쓸일이 없다.<br>이제 무엇을 더 줄여볼까? </p><h2 id="게으르지는-않았는가-근면성실"><a href="#게으르지는-않았는가-근면성실" class="headerlink" title="게으르지는 않았는가? (근면성실)"></a>게으르지는 않았는가? (근면성실)</h2><p>요새는 항상 12시~1시 사이에 잠들어서 7~8시 사이에 일어난다. 잠을 많이 잔다고 게으른건 아니지만 자연스럽게 지내고 있다. 스스로를 너무 압박하는 것도 좋지 않은 것 같다. 하고 싶은대로 하자.</p><p>개선 포인트 : 자연스럽게..</p><h2 id="건강한-삶을-위해-어떤-노력을-하였는가-청소-요리-금주-운동"><a href="#건강한-삶을-위해-어떤-노력을-하였는가-청소-요리-금주-운동" class="headerlink" title="건강한 삶을 위해 어떤 노력을 하였는가? (청소, 요리, 금주, 운동)"></a>건강한 삶을 위해 어떤 노력을 하였는가? (청소, 요리, 금주, 운동)</h2><p>팔굽혀 펴기, 자전거 타기, 아령들기를 조금 했다. 청소도 했고, 술도 마시지 않았다. 집에만 있으니 모든게 개선되고 있는 것 같다. 사람을 만나면 안되는 건가? 블로그 쓰는데, 주식을 하는데 몰입 하다보니 우울할 틈도 없다. 빨리 뭔가 만들어서 팔아 보기도 하고, 유입률도 많이 늘어서 수입도 생기면 더 행복 해 질 것 같다.</p><h2 id="즐겁게-살고-있는가-시간을-보람되게-보냈는가-사람들과-좋은-관계를-맺고-있는가-원하는-일을-하고-있는가"><a href="#즐겁게-살고-있는가-시간을-보람되게-보냈는가-사람들과-좋은-관계를-맺고-있는가-원하는-일을-하고-있는가" class="headerlink" title="즐겁게 살고 있는가? ( 시간을 보람되게 보냈는가? 사람들과 좋은 관계를 맺고 있는가? 원하는 일을 하고 있는가?)"></a>즐겁게 살고 있는가? ( 시간을 보람되게 보냈는가? 사람들과 좋은 관계를 맺고 있는가? 원하는 일을 하고 있는가?)</h2><p>하루가 어떻게 지나가는지 모를정도로 정신없이 살고 있다. 회사 다닐 때나 사람들 만나서 술 마실 때는 고통의 연속이었는데, 나 홀로 집에서 보내니 스트레스도 없고 (있긴 하지만 뭔가 해결하면 될 것 같은.. ) 좋다.<br>사람에 의한 스트레스가 심했던 것 같다. </p><h2 id="성장을-위해-어떤-노력을-하였는가-기록-정리-복기-습관화"><a href="#성장을-위해-어떤-노력을-하였는가-기록-정리-복기-습관화" class="headerlink" title="성장을 위해 어떤 노력을 하였는가? (기록, 정리, 복기, 습관화)"></a>성장을 위해 어떤 노력을 하였는가? (기록, 정리, 복기, 습관화)</h2><p>글쓰기를 좀 잘 해야겠다 싶다. 블로그를 쓰면서도 쓸 글이 없거나, 쓸데 없는 글들만 생산해 내고 있는 것 같다. 그래도 처음보다는 포스팅 하는데 익숙해 지긴 하였지만, 많은 부분 사진으로 커버하고 있고, 의미 있는 글을 많이 쓰지는 못한다. 최소 1000자 이상의 글을 자꾸 쓰는 연습을 해야 할 것 같다.<br>또한 입력이 없으니 출력이 없다라는 생각이 들었다. 블로그를 자꾸 쓰긴 하는데, 소재가 없다. 개발을 하긴 하는데 무엇을 만들어야 할지 모르는 것처럼..<br>경험이 필요한데, 글쓰는데는 책이 정말 중요한 것 같다. 책을 읽어야겠다. </p><p>개선 포인트 : 매일 1000자 이상의 글을 쓰는 연습을 하고, 책을 읽자. </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/Thumbnail/diary_0512.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;절약을-잘-했는가-낭비한-것은-없는가&quot;&gt;&lt;a href=&quot;#절약을-잘-했는가-낭비한-것은-없는가&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
      <category term="일상" scheme="https://slim8020.github.io/categories/%EC%9D%BC%EC%83%81/"/>
    
    
      <category term="diary" scheme="https://slim8020.github.io/tags/diary/"/>
    
      <category term="Saving" scheme="https://slim8020.github.io/tags/Saving/"/>
    
      <category term="Diligence" scheme="https://slim8020.github.io/tags/Diligence/"/>
    
      <category term="health" scheme="https://slim8020.github.io/tags/health/"/>
    
      <category term="Joy" scheme="https://slim8020.github.io/tags/Joy/"/>
    
      <category term="Growth" scheme="https://slim8020.github.io/tags/Growth/"/>
    
  </entry>
  
  <entry>
    <title>질문</title>
    <link href="https://slim8020.github.io/2021/05/12/Essay_Question/"/>
    <id>https://slim8020.github.io/2021/05/12/Essay_Question/</id>
    <published>2021-05-12T09:37:03.000Z</published>
    <updated>2021-05-13T01:51:56.227Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/Thumbnail/question.png" alt=""></p><h2 id="질문-Question"><a href="#질문-Question" class="headerlink" title="질문 (Question)"></a>질문 (Question)</h2><p>나는 질문 하는 것을 힘들어 한다. </p><p>질문하면 바보처럼 보일까봐<br>나 정도 되면 알고 있어야 해라고 생각해서<br>모르면 무시당하거나 이용당할 것 같아서<br>상황상 질문 할 때가 아닌것 같아서</p><p>이와 같은 이유로 힘들어 한다.</p><p>잘지내?<br>하는 일은 어때?<br>아기는 잘 커?</p><p>안부를 묻는 것도 질문인데 이것조차도 여러가지 생각들로 인해서 힘들어 한다.</p><p>오랫만에 연락하거나 했을 때 특히나 그렇다.</p><p>뭔가 목적이 있거나 필요에 의해서 연락한 것은 아닐까<br>내가 하는 질문에 실수가 있지 않을까<br>(아기가 없는데 아기는 잘 커?라는 질문을 했다거나.. )<br>(퇴사 했는데 회사는 잘 다녀?)<br>그리고 상대방의 상황을 기억 하지 못한다는 것도 미안하기도 하다. </p><p>이렇게 힘든 질문은 내 삶에 있어서 굉장히 중요한 역할을 하고 있다.</p><p>어떠한 문제를 해결할 때도 스스로에게 질문을 한다.<br>그리고 길을 묻거나 가격을 묻거나하는 정보를 얻기 위해서도 질문을 한다.<br>또한 예를 들었던 안부와 같은 형식적인 질문도 있다. </p><p>대상에 따라서 스스로에게 질문하기도, 남에게 질문하기도<br>불특정다수에게 질문하기도 한다. </p><p>내 일은 질문을 하지 않으면 해결할 수 없는 일들이 많다.<br>내가 작성한 코드가 동작하다가도 문제가 발생하면 질문에서 부터 시작 해야 한다.</p><p>왜 문제가 생겼지?<br>이 부분이 문제 인가?<br>이것을 어떻게 바꿔야 하지?</p><p>질문을 잘 하면 문제도 빨리 해결이 되곤 한다.</p><p>질문을 한다는 것은 어떤 의미 일까?<br>문제를 해결하기 위한 질문, 정보를 습득하기 위한 질문, 형식적인 질문<br>질문에 목적에 따라서 달라지겠지만, 필요에 의해서 질문을 하게 된다.</p><p>질문을 잘하는 방법은 무엇일까?</p><p>왜 질문을 잘 해야 할까?<br>질문을 잘 하면 문제도 빨리 해결할 수 있고, 정보도 정확하게 얻을 수 있고<br>상대방에게 호감도 얻을 수 있기 때문이다. </p><p>질문을 잘 한다는 것은 무엇일까?<br>질문을 잘한다는 것은 커뮤니케이션을 잘한다고 할 수 있을 것 같다.<br>커뮤니케이션의 절반은 질문이 아닌가</p><p>질문하지 않는 분위기와 문화<br>학교 다닐 떄도 그랬다. 모르는 것이 생겨도 수업시간에 당당히 묻지 못하고 조용히 친구에게 물어보거나<br>아무도 모르면 그냥 모르는 채로 넘어가곤 했다.<br>왜 그래야 하는지, 어떻게 하면 해결할 수 있는지와 같은 질문에 익숙하지 않다.<br>시키면 시키는 대로 나 잘 되라고 하는 것이다 라고 생각하고 넘어갔다.<br>요새는 그나마 질문하는 사람들이 늘었다. 날카로운 질문에 적잖히 당황하곤 한다.</p><p>특히나 아이들일수록 생각치도 못했던 질문을 하는 경우가 많다.<br>단순히 이건 뭐야 라는 질문부터 삼촌/이모는 왜 장가를 안 갔어? 라든가<br>답해주기 어렵다.<br>그러면 질문으로 응수한다.<br>왜 안 갔을것 같아? 왜 그게 궁금해?</p><p>질문한다는 것은 관심의 표현 아닐까?</p><p>질문을 잘 활용하면 많은 것을 이끌어 낼수 있지 않을까?</p><p>효과적인 질문 방법에는 어떤 것이 있을까?</p><p>답을 주는 것보다 질문 해주는게 보다 올바른 대답을 찾을 수 있지 않을까?</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/Thumbnail/question.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;질문-Question&quot;&gt;&lt;a href=&quot;#질문-Question&quot; class=&quot;headerlink&quot; title=&quot;질문 (Question)&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="에세이" scheme="https://slim8020.github.io/categories/%EC%97%90%EC%84%B8%EC%9D%B4/"/>
    
    
      <category term="writing" scheme="https://slim8020.github.io/tags/writing/"/>
    
      <category term="essay" scheme="https://slim8020.github.io/tags/essay/"/>
    
      <category term="question" scheme="https://slim8020.github.io/tags/question/"/>
    
  </entry>
  
  <entry>
    <title>웹 브라우저가 스크립트를 해석하는 과정 외 JS 학습 내용</title>
    <link href="https://slim8020.github.io/2021/05/12/web_browser_exec/"/>
    <id>https://slim8020.github.io/2021/05/12/web_browser_exec/</id>
    <published>2021-05-12T09:19:03.000Z</published>
    <updated>2021-05-13T01:51:56.241Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/Thumbnail/browser.png" alt=""></p><h2 id="웹-브라우저가-스크립트를-해석하는-과정"><a href="#웹-브라우저가-스크립트를-해석하는-과정" class="headerlink" title="웹 브라우저가 스크립트를 해석하는 과정"></a>웹 브라우저가 스크립트를 해석하는 과정</h2><ol><li>&lt;!DOCTYPE html &gt; 을 보고 이 문서가 html 문서임을 인식하여 html 표준에 맞춰서 해석 시작</li><li>html 태그 사이의 순서와 포함관계 확인<ul><li>head 태그 사이에 어떤 태그가 있는가?</li><li>body 태그 사이에 어떤 태그가 있는가?</li><li>순서와 포함관계 확인.</li></ul></li><li>태그분석 후 스타일 정보 분석</li><li>script 태그를 만나면 웹브라우저 내부의 자바스크립트 해석기에 스크립트 소스를 넘김.<br>자바스크립트 해석기는 script 사이의 소스를 해석함.</li><li>분석된 태그와 스타일 정보를 기준으로 웹 브라우저에 화면 표시</li><li>자바 스크립트가 해석될 액션이 있으면 자바 스크립트를 실행</li></ol><h2 id="C-계열-언어와-다른-비교-연산자"><a href="#C-계열-언어와-다른-비교-연산자" class="headerlink" title="C 계열 언어와 다른 비교 연산자"></a>C 계열 언어와 다른 비교 연산자</h2><p>내가 배운 언어들과 다른 연산자. 기억 해 두자.</p><table><thead><tr><th>종류</th><th>설명</th></tr></thead><tbody><tr><td>===</td><td>값과 자료형이 모두 같을 때</td></tr><tr><td>!==</td><td>값이나 자료형 둘중에 하나가 다를 떄</td></tr></tbody></table><h2 id="함수-선언과-실행-순서"><a href="#함수-선언과-실행-순서" class="headerlink" title="함수 선언과 실행 순서"></a>함수 선언과 실행 순서</h2><p>Javascript 는 선언과 호출에 순서 상관 없이 작성할 수 있음.</p><p>웹브라우저가 자바스크립트 소스 해석 시 함수 선언 부분을 먼저 하기 때문에<br>선언한 위치와 상관 없이 호출 할 수 있음.</p><p>선언을 먼저 하고 호출한 경우<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/*선언*/</span><br><span class="line">function a()&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*호출*/</span><br><span class="line">a();</span><br></pre></td></tr></table></figure></p><p>호츌을 먼저 하고 선언을 한 경우<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/*호출*/</span><br><span class="line">a();</span><br><span class="line"></span><br><span class="line">/*선언*/</span><br><span class="line">function a()&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="변수의-적용-스코프"><a href="#변수의-적용-스코프" class="headerlink" title="변수의 적용 스코프"></a>변수의 적용 스코프</h2><table><thead><tr><th>종류</th><th>설명</th></tr></thead><tbody><tr><td>지역변수</td><td>해당 함수 안에서만 사용 가능. 함수 안에서 var 예약어로 선언 해야 함.</td></tr><tr><td>전역변수</td><td>적용 범위 없이 사용 가능. 함수 밖에서 선언 할 때는 var 사용. 함수 내에서 사용할 경우 var 예약어 없이 사용.</td></tr><tr><td>호이스팅</td><td>“끌어올린다” 라는 의미. 변수가 호출되고 나중에 선언하더라도 끌어올려서 선언 된 변수로 처리. <br> 함수 내에서 어디서든 선언할 수 있는 자유도가 생김.</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/Thumbnail/browser.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;웹-브라우저가-스크립트를-해석하는-과정&quot;&gt;&lt;a href=&quot;#웹-브라우저가-스크립트를-해석하는-과정&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="프론트엔드" scheme="https://slim8020.github.io/categories/%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C/"/>
    
    
      <category term="web" scheme="https://slim8020.github.io/tags/web/"/>
    
      <category term="css" scheme="https://slim8020.github.io/tags/css/"/>
    
      <category term="html" scheme="https://slim8020.github.io/tags/html/"/>
    
      <category term="javascript" scheme="https://slim8020.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>반응형 관련 CSS 정리 (미디어쿼리)</title>
    <link href="https://slim8020.github.io/2021/05/11/mediaquery/"/>
    <id>https://slim8020.github.io/2021/05/11/mediaquery/</id>
    <published>2021-05-11T12:32:03.000Z</published>
    <updated>2021-05-13T01:51:56.240Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/Thumbnail/mediaquery.png" alt=""></p><h2 id="미디어-쿼리-속성"><a href="#미디어-쿼리-속성" class="headerlink" title="미디어 쿼리 속성"></a>미디어 쿼리 속성</h2><p>반응형 웹 디자인에서 가장 기본적인 개념.<br>사이트에 접속하는 장치에 따라 특정한 CSS 스타일을 적용.</p><ul><li>형태 : @media [only|not] 미디어 유형 [and 조건] * [and 조건]</li></ul><h2 id="미디어-유형"><a href="#미디어-유형" class="headerlink" title="미디어 유형"></a>미디어 유형</h2><table><thead><tr><th>종류</th><th>설명</th></tr></thead><tbody><tr><td>all</td><td>모든 미디어 유형</td></tr><tr><td>print</td><td>인쇄 장치</td></tr><tr><td>screen</td><td>PC 스크린 + 스마트폰 스크린</td></tr><tr><td>tv</td><td>음성과 영상이 동시에 출력되는 TV</td></tr><tr><td>aural</td><td>화면을 읽어 소리로 출력해 주는 장치</td></tr><tr><td>braille</td><td>점자 표시 장치</td></tr><tr><td>handled</td><td>패드</td></tr><tr><td>projection</td><td>프로젝터</td></tr><tr><td>tty</td><td>디스플레이 기능이 제한된 장치. 픽셀 단위를 사용할 수 없음</td></tr><tr><td>embossed</td><td>점자 프린터</td></tr></tbody></table><h2 id="조건"><a href="#조건" class="headerlink" title="조건"></a>조건</h2><h3 id="웹페이지의-너비와-높이"><a href="#웹페이지의-너비와-높이" class="headerlink" title="웹페이지의 너비와 높이"></a>웹페이지의 너비와 높이</h3><p>웹 문서 내용이 화면에 나타나는 영역을 뷰포트라고 하는데 뷰포트의 너비와 높이를 미디어 쿼리 조건으로 사용함.</p><table><thead><tr><th>종류</th><th>설명</th></tr></thead><tbody><tr><td>width, height</td><td>뷰포트의 가로, 세로 길이</td></tr><tr><td>min-width, min-height</td><td>뷰포트의 최소 너비, 최소 높이</td></tr><tr><td>max-width, max-height</td><td>뷰포트의 최대 너비, 최대 높이</td></tr></tbody></table><h3 id="단말기의-너비와-높이"><a href="#단말기의-너비와-높이" class="headerlink" title="단말기의 너비와 높이"></a>단말기의 너비와 높이</h3><table><thead><tr><th>종류</th><th>설명</th></tr></thead><tbody><tr><td>device-width, device-height</td><td>디바이스의 가로, 세로 길이</td></tr><tr><td>min-device-width, min-device-height</td><td>디바이스의 최소 너비, 최소 높이</td></tr><tr><td>max-device-width, max-device-height</td><td>디바이스의 최대 너비, 최대 높이</td></tr></tbody></table><p>예시)<br>@media all and (min-device-width: 360px) and (min-device-height: 640px){<br>}</p><h3 id="화면-회전"><a href="#화면-회전" class="headerlink" title="화면 회전"></a>화면 회전</h3><table><thead><tr><th>종류</th><th>설명</th><th>예시</th></tr></thead><tbody><tr><td>portrait</td><td>단말기의 세로 모드</td><td>orienntation: portrait</td></tr><tr><td>landscape</td><td>단말기의 가로 모드</td><td>orientation : landscape</td></tr></tbody></table><h2 id="모바일-퍼스트-mobile-first-기법"><a href="#모바일-퍼스트-mobile-first-기법" class="headerlink" title="모바일 퍼스트(mobile first) 기법"></a>모바일 퍼스트(mobile first) 기법</h2><ul><li>다른 기기에 비해 제약 조건이 많은 모바일의 레이아웃을 기본으로 스타일링</li></ul><h2 id="중단점"><a href="#중단점" class="headerlink" title="중단점"></a>중단점</h2><ul><li>기준이 되는 단말기에 따라 달라질 수 있음.</li><li>스마트폰의 경우 미디어 쿼리를 사용하지 않고, 기본 CSS 로 작성</li><li>태블릿의 경우 세로크기가 768px 이상, 가로크기 1024px 이상</li><li>데스크톱의 경우 1024px 이상</li></ul><h2 id="외부-CSS-파일-연결"><a href="#외부-CSS-파일-연결" class="headerlink" title="외부 CSS 파일 연결"></a>외부 CSS 파일 연결</h2><h3 id="link-를-이용할-때"><a href="#link-를-이용할-때" class="headerlink" title="link 를 이용할 때"></a>link 를 이용할 때</h3><p>&lt; link rel=”stylesheet” media= “미디어쿼리조건”    href=”css 파일경로” s&gt; </p><h3 id="import-를-이용할-때"><a href="#import-를-이용할-때" class="headerlink" title="import 를 이용할 때"></a>import 를 이용할 때</h3><p>@import url(“css/pc.css”) only screen and (min-width : 1024px)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/Thumbnail/mediaquery.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;미디어-쿼리-속성&quot;&gt;&lt;a href=&quot;#미디어-쿼리-속성&quot; class=&quot;headerlink&quot; title=&quot;미디어 쿼리 속성&quot;&gt;&lt;/a&gt;미디어
      
    
    </summary>
    
      <category term="프론트엔드" scheme="https://slim8020.github.io/categories/%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C/"/>
    
    
      <category term="publishing" scheme="https://slim8020.github.io/tags/publishing/"/>
    
      <category term="web" scheme="https://slim8020.github.io/tags/web/"/>
    
      <category term="css" scheme="https://slim8020.github.io/tags/css/"/>
    
      <category term="html" scheme="https://slim8020.github.io/tags/html/"/>
    
      <category term="mediaquery" scheme="https://slim8020.github.io/tags/mediaquery/"/>
    
      <category term="flex" scheme="https://slim8020.github.io/tags/flex/"/>
    
      <category term="grid" scheme="https://slim8020.github.io/tags/grid/"/>
    
  </entry>
  
  <entry>
    <title>사용자 입력에 필요한 HTML 정리</title>
    <link href="https://slim8020.github.io/2021/05/10/input_form/"/>
    <id>https://slim8020.github.io/2021/05/10/input_form/</id>
    <published>2021-05-10T06:32:03.000Z</published>
    <updated>2021-05-13T01:51:56.239Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/Thumbnail/input.png" alt=""></p><p>대부분의 태그는 숙지하고 있어야 겠지만 개발 시 기억이 안날 수 있으므로 정리 해 둔다. </p><h2 id="폼-관련-태그"><a href="#폼-관련-태그" class="headerlink" title="폼 관련 태그"></a>폼 관련 태그</h2><table><thead><tr><th>종류</th><th>설명</th></tr></thead><tbody><tr><td>&lt;form&gt;</td><td>폼의 시작과 끝</td></tr><tr><td>&lt;fieldset&gt;</td><td>폼 요소를 그룹으로 묶음</td></tr><tr><td>&lt;legend&gt;</td><td>필드셋에 제목을 나타냄</td></tr><tr><td>&lt;input&gt;</td><td>사용자 입력 받을 필드를 삽입</td></tr><tr><td>&lt;select&gt;</td><td>드롭다운 목록 삽입</td></tr><tr><td>&lt;option&gt;</td><td>드롭다운 목록 삽입</td></tr><tr><td>&lt;textarea&gt;</td><td>텍스트를 여러줄로 입력할 수 있는 텍스트 영역 삽입</td></tr><tr><td>&lt;datalist&gt;</td><td>데이터 목록 삽입</td></tr></tbody></table><h2 id="input-태그-타입"><a href="#input-태그-타입" class="headerlink" title="input 태그 타입"></a>input 태그 타입</h2><table><thead><tr><th>종류</th><th>설명</th></tr></thead><tbody><tr><td>text</td><td>한줄짜리 텍스트 입력</td></tr><tr><td>password</td><td>비밀번호를 입력 (텍스트 표시가 *로 표시)</td></tr><tr><td>search</td><td>검색할 때 입력하는 필드</td></tr><tr><td>url</td><td>URL 주소를 입력할 수 있는 필드</td></tr><tr><td>email</td><td>이메일 주소를 입력할 수 있는 필드</td></tr><tr><td>tel</td><td>전화번호를 입력 할 수 있는 필드</td></tr><tr><td>checkbox</td><td>체크박스 (여러 항목 중 여러개 선택 가능)</td></tr><tr><td>radio</td><td>라디오 버튼 (여러 항목 중 한개만 선택 가능)</td></tr><tr><td>number</td><td>값을 조절할 수 있는 스핀박스</td></tr><tr><td>range</td><td>숫자를 조절 할 수 있는 슬라이더</td></tr><tr><td>date</td><td>사용자 지역 기준 연,월,일 입력 필드</td></tr><tr><td>month</td><td>사용자 지역 기준 연,월 입력 필드</td></tr><tr><td>week</td><td>사용자 지역 기준 연,주 입력 필드</td></tr><tr><td>time</td><td>사용자 지역 기준 시간(시,분,초) 입력 필드</td></tr><tr><td>datetime</td><td>국제 표준시(UTC)로 설정된 날짜와 시간(연,월,일,시,분,초) 입력</td></tr><tr><td>datetime-local</td><td>사용자 지역 기준 날짜와 시간(연,월,일,시,분,초) 입력</td></tr><tr><td>submit</td><td>전송 버튼</td></tr><tr><td>reset</td><td>리셋 버튼</td></tr><tr><td>image</td><td>이미지 버튼</td></tr><tr><td>button</td><td>일반 버튼</td></tr><tr><td>file</td><td>파일을 첨부 할 수 있는 버튼</td></tr><tr><td>hidden</td><td>사용자에게 보이지 않지만 서버로 넘겨주는 값이 있는 필드</td></tr></tbody></table><h2 id="input-태그-속성"><a href="#input-태그-속성" class="headerlink" title="input 태그 속성"></a>input 태그 속성</h2><table><thead><tr><th>종류</th><th>설명</th></tr></thead><tbody><tr><td>autofocus</td><td>웹 문서가 열리면 입력 필드 안에 마우스 포인터 표시</td></tr><tr><td>placeholder</td><td>텍스트 필드에 힌트 표시 (좋은 UI 는 아니란다.)</td></tr><tr><td>readonly</td><td>입력 필드를 읽기 전용으로 지정</td></tr><tr><td>required</td><td>필수 입력 필드</td></tr><tr><td>max</td><td>숫자 입력 필드에서 최대값 지정</td></tr><tr><td>min</td><td>숫자 입력 필드에서 최소값 지정</td></tr><tr><td>step</td><td>숫자 입력 필드에서 증감할 간격 지정</td></tr><tr><td>maxlength</td><td>텍스트 입력 최대 길이 지정</td></tr><tr><td>minlength</td><td>텍스트 입력 최소 길이 지정</td></tr><tr><td>size</td><td>텍스트 관련 필드에서 화면에 표시할 크기를 지정</td></tr><tr><td>list</td><td>연결할 데이터 목록을 지정</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/Thumbnail/input.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;대부분의 태그는 숙지하고 있어야 겠지만 개발 시 기억이 안날 수 있으므로 정리 해 둔다. &lt;/p&gt;
&lt;h2 id=&quot;폼-관련-태그&quot;&gt;&lt;a href=&quot;#폼-관련
      
    
    </summary>
    
      <category term="프론트엔드" scheme="https://slim8020.github.io/categories/%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C/"/>
    
    
      <category term="publishing" scheme="https://slim8020.github.io/tags/publishing/"/>
    
      <category term="web" scheme="https://slim8020.github.io/tags/web/"/>
    
      <category term="css" scheme="https://slim8020.github.io/tags/css/"/>
    
      <category term="html" scheme="https://slim8020.github.io/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>Summary of CSS Transitions</title>
    <link href="https://slim8020.github.io/2021/05/10/css_transition/"/>
    <id>https://slim8020.github.io/2021/05/10/css_transition/</id>
    <published>2021-05-10T02:32:03.000Z</published>
    <updated>2021-05-13T01:51:56.236Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/Thumbnail/transitions.png" alt=""></p><p>You should be familiar with most of the properties, but keep them organized as they may not be remembered during development.</p><h2 id="Transition-attribute"><a href="#Transition-attribute" class="headerlink" title="Transition attribute"></a>Transition attribute</h2><table><thead><tr><th>Propeties</th><th>Explanation</th><th>Example</th></tr></thead><tbody><tr><td>transition-property</td><td>Targeting the transition</td><td>transition-property: width, height</td></tr><tr><td>transition-duration</td><td>Targeting the transition</td><td>transition-property: width, height</td></tr><tr><td>transition-timing-function</td><td>Targeting the transition</td><td>transition-property: width, height</td></tr><tr><td>transition-delay</td><td>Targeting the transition</td><td>transition-property: width, height</td></tr><tr><td>transition</td><td>Targeting the transition</td><td>transition-property: width, height</td></tr></tbody></table><h2 id="transition-properties"><a href="#transition-properties" class="headerlink" title="transition properties"></a>transition properties</h2><table><thead><tr><th>Propeties</th><th>Explanation</th><th>Example</th></tr></thead><tbody><tr><td>all</td><td>All properties are transition targets. Default</td><td>transition : all</td></tr><tr><td>none</td><td>No properties change during transition</td><td>transition : none</td></tr><tr><td>property name</td><td>Specify the properties to apply the transition effect (background color, width, height, etc…)</td><td>transition : width, height</td></tr></tbody></table><h2 id="transition-timing-function-properties"><a href="#transition-timing-function-properties" class="headerlink" title="transition-timing-function properties"></a>transition-timing-function properties</h2><table><thead><tr><th>Propeties</th><th>Explanation</th><th>Example</th></tr></thead><tbody><tr><td>ease</td><td>Start slowly at first, get faster, and finish slowly at the end. Default</td><td>transition-timing-function : ease</td></tr><tr><td>linear</td><td>Progress at the same speed from start to finish.</td><td>transition-timing-function : linear</td></tr><tr><td>ease-in</td><td>Start slowly</td><td>transition-timing-function : ease-in</td></tr><tr><td>ease-out</td><td>End slowly</td><td>transition-timing-function : ease-out</td></tr><tr><td>ease-in-out</td><td>Starts Slowly Ends Slowly</td><td>transition-timing-function : ease-in-out</td></tr><tr><td>cubic-bezier(n,n,n,n)</td><td>Define and use a Bezier function. n value is used only between 0 and 1</td><td>transition-timing-function : cubic-bezier(0.1, 0.5, 0.5, 0.2)</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/Thumbnail/transitions.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;You should be familiar with most of the properties, but keep them organized as t
      
    
    </summary>
    
      <category term="프론트엔드" scheme="https://slim8020.github.io/categories/%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C/"/>
    
    
      <category term="publishing" scheme="https://slim8020.github.io/tags/publishing/"/>
    
      <category term="web" scheme="https://slim8020.github.io/tags/web/"/>
    
      <category term="css" scheme="https://slim8020.github.io/tags/css/"/>
    
      <category term="html" scheme="https://slim8020.github.io/tags/html/"/>
    
      <category term="transition" scheme="https://slim8020.github.io/tags/transition/"/>
    
  </entry>
  
  <entry>
    <title>Summary of CSS Box Model Properties</title>
    <link href="https://slim8020.github.io/2021/05/04/css_boxmodel/"/>
    <id>https://slim8020.github.io/2021/05/04/css_boxmodel/</id>
    <published>2021-05-04T06:32:03.000Z</published>
    <updated>2021-05-13T01:51:56.235Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/Thumbnail/boxmodel.png" alt=""></p><p>You should be familiar with most of the properties, but keep them organized as they may not be remembered during development.</p><h2 id="Box-Model-Properties"><a href="#Box-Model-Properties" class="headerlink" title="Box Model Properties"></a>Box Model Properties</h2><table><thead><tr><th>Propeties</th><th>Explanation</th><th>Example</th></tr></thead><tbody><tr><td>width</td><td>Specify the width of the box model</td><td>width: 100px</td></tr><tr><td>height</td><td>Specify the height of the box model</td><td>height: 100px</td></tr><tr><td>box-sizing</td><td>Specifies the criteria for calculating the size of the box model</td><td>box-sizing : border-box / box-sizing : content-box</td></tr><tr><td>box-shadow</td><td>Adding a shadow effect to the box model</td><td>box-shadow : width height area color</td></tr></tbody></table><h2 id="Border-Properties"><a href="#Border-Properties" class="headerlink" title="Border Properties"></a>Border Properties</h2><table><thead><tr><th>Propeties</th><th>Explanation</th><th>Example</th></tr></thead><tbody><tr><td>border-style</td><td>Designate border styles in 4 directions at once</td><td>border-style: solid</td></tr><tr><td>border-‘location’-style</td><td>Specify only the border style at the selected location</td><td>border-top-style: solid</td></tr><tr><td>border-width</td><td>Specify the thickness of the borders in 4 directions at once</td><td>border-width: 10px</td></tr><tr><td>border-‘location’-width</td><td>Specify only the thickness of the border at the selected location</td><td>border-top-width: 10px</td></tr><tr><td>border-color</td><td>Designate the color of the borders in 4 directions at the same time, up, down, left, and right</td><td>border-color: #000</td></tr><tr><td>border-‘location’-color</td><td>Specify only the border color at the selected location</td><td>border-top-color: #f00</td></tr><tr><td>border-radius</td><td>Round the vertices in four directions, top, bottom, left, and right</td><td>border-radius: 10px</td></tr><tr><td>border-‘location’-radius</td><td>Round only the vertices of the selected location</td><td>border-top=left-radius: 10px</td></tr></tbody></table><h2 id="Margin-Properties"><a href="#Margin-Properties" class="headerlink" title="Margin Properties"></a>Margin Properties</h2><table><thead><tr><th>Propeties</th><th>Explanation</th><th>Example</th></tr></thead><tbody><tr><td>margin</td><td>Specify margins at once</td><td>margin: 10px 10px 5px 5px</td></tr><tr><td>margin-‘location’</td><td>Specify the margin of the specified position (top, left, bottom, right)</td><td>margin-top: 10px</td></tr><tr><td>padding</td><td>Specify padding all at once</td><td>padding: 10px 10px 5px 5px</td></tr><tr><td>padding-‘location’</td><td>Specify the padding of a fixed position (top, left, bottom, right)</td><td>padding-top: 10px</td></tr></tbody></table><h2 id="Layout-Properties"><a href="#Layout-Properties" class="headerlink" title="Layout Properties"></a>Layout Properties</h2><table><thead><tr><th>Propeties</th><th>Explanation</th><th>Example</th></tr></thead><tbody><tr><td>display</td><td>Specify how to place elements on the screen (block, inline, inline-block, none)</td><td>display : block</td></tr><tr><td>float</td><td>Place web elements left or right.</td><td>float : left</td></tr><tr><td>clear</td><td>Turn off the float property</td><td>clear : both</td></tr></tbody></table><h2 id="Position-Properties"><a href="#Position-Properties" class="headerlink" title="Position Properties"></a>Position Properties</h2><table><thead><tr><th>Propeties</th><th>Explanation</th><th>Example</th></tr></thead><tbody><tr><td>left, right, top, bottom</td><td>Specifies how far up, down, left, and right between the anchor and the element</td><td>left:10px</td></tr><tr><td>position</td><td>Positioning of web elements (static, relative, absolute, fixed)</td><td>position: relative</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/Thumbnail/boxmodel.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;You should be familiar with most of the properties, but keep them organized as they
      
    
    </summary>
    
      <category term="프론트엔드" scheme="https://slim8020.github.io/categories/%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C/"/>
    
    
      <category term="publishing" scheme="https://slim8020.github.io/tags/publishing/"/>
    
      <category term="web" scheme="https://slim8020.github.io/tags/web/"/>
    
      <category term="css" scheme="https://slim8020.github.io/tags/css/"/>
    
      <category term="html" scheme="https://slim8020.github.io/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>자주 쓰는 HTML 태그 정리</title>
    <link href="https://slim8020.github.io/2021/05/04/html_tag/"/>
    <id>https://slim8020.github.io/2021/05/04/html_tag/</id>
    <published>2021-05-04T06:32:03.000Z</published>
    <updated>2021-05-13T01:51:56.238Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/Thumbnail/htmltag.png" alt=""></p><p>대부분의 태그는 숙지하고 있어야 겠지만 개발 시 기억이 안날 수 있으므로 정리 해 둔다. </p><h2 id="텍스트-관련-태그"><a href="#텍스트-관련-태그" class="headerlink" title="텍스트 관련 태그"></a>텍스트 관련 태그</h2><table><thead><tr><th>종류</th><th>설명</th></tr></thead><tbody><tr><td>&lt;hn&gt;</td><td>제목을 나타냄</td></tr><tr><td>&lt;p&gt;</td><td>텍스트 단락. 내용이 길면 웹브라우저 창의 너비에 맞게 줄바꿈</td></tr><tr><td>&lt;br&gt;</td><td>줄바꿈.</td></tr><tr><td>&lt;blockquote&gt;</td><td>내용 인용. 다른 내용보다 들여쓰고 단락으로 표시됨.</td></tr><tr><td>&lt;strong&gt;</td><td>굵게 표시. 화면 낭독기에서 강조해서 읽음.</td></tr><tr><td>&lt;b&gt;</td><td>굵게 표시. 중요하지 않음</td></tr><tr><td>&lt;em&gt;</td><td>중요한 텍스트를 기울여 표시(문장). 화면 낭독기에서 강조해서 읽음.</td></tr><tr><td>&lt;i&gt;</td><td>기울여 표시. 중요하지 않음.</td></tr><tr><td>&lt;ins&gt;</td><td>추가한 내용을 표시</td></tr><tr><td>&lt;del&gt;</td><td>삭제한 내용을 표시</td></tr><tr><td>&lt;sup&gt;</td><td>위 첨자</td></tr><tr><td>&lt;sub&gt;</td><td>아래 첨자</td></tr></tbody></table><h2 id="목록-관련-태그"><a href="#목록-관련-태그" class="headerlink" title="목록 관련 태그"></a>목록 관련 태그</h2><table><thead><tr><th>종류</th><th>설명</th></tr></thead><tbody><tr><td>&lt;ol&gt;</td><td>순서 있는 목록의 시작과 끝을 나타냄.</td></tr><tr><td>&lt;ul&gt;</td><td>순서 없는 목록의 시작과 끝을 나타냄.</td></tr><tr><td>&lt;li&gt;</td><td>목록의 각 항목을 나타냄.</td></tr><tr><td>&lt;dl&gt;</td><td>설명 목록의 시작과 끝을 나타냄.</td></tr><tr><td>&lt;dt&gt;</td><td>설명 목록의 이름(제목)</td></tr><tr><td>&lt;dd&gt;</td><td>설명 목록의 값(설명)</td></tr></tbody></table><h2 id="표-관련-태그"><a href="#표-관련-태그" class="headerlink" title="표 관련 태그"></a>표 관련 태그</h2><table><thead><tr><th>종류</th><th>설명</th></tr></thead><tbody><tr><td>&lt;table&gt;</td><td>표의 시작과 끝을 나타냄.</td></tr><tr><td>&lt;caption&gt;</td><td>표의 제목</td></tr><tr><td>&lt;tr&gt;</td><td>표의 행</td></tr><tr><td>&lt;td&gt;</td><td>표의 셀</td></tr><tr><td>&lt;th&gt;</td><td>제목 셀</td></tr><tr><td>&lt;thead&gt;</td><td>표 구조에서 제목 부분</td></tr><tr><td>&lt;tbody&gt;</td><td>표 구조에서 본문 부분</td></tr><tr><td>&lt;tfoot&gt;</td><td>표 구조에서 요약이나 정리 부분</td></tr><tr><td>&lt;col&gt;</td><td>표에서 열의 스타일 지정</td></tr><tr><td>&lt;colgroup&gt;</td><td>표에서 여러열을 한꺼번에 묶어 스타일 지정</td></tr></tbody></table><h2 id="멀티미디어-관련-태그"><a href="#멀티미디어-관련-태그" class="headerlink" title="멀티미디어 관련 태그"></a>멀티미디어 관련 태그</h2><table><thead><tr><th>종류</th><th>설명</th></tr></thead><tbody><tr><td>&lt;object&gt;</td><td>멀티미디어, PDF 파일등 다양한 형식의 파일 삽입</td></tr><tr><td>&lt;embed&gt;</td><td>audio, video, object 태그를 지원하지 않을 경우 멀티미디어 파일 삽입</td></tr><tr><td>&lt;img&gt;</td><td>이미지 파일 삽입</td></tr><tr><td>&lt;audio&gt;</td><td>오디오 파일 삽입</td></tr><tr><td>&lt;video&gt;</td><td>비디오 파일 삽입)</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/Thumbnail/htmltag.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;대부분의 태그는 숙지하고 있어야 겠지만 개발 시 기억이 안날 수 있으므로 정리 해 둔다. &lt;/p&gt;
&lt;h2 id=&quot;텍스트-관련-태그&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
      <category term="프론트엔드" scheme="https://slim8020.github.io/categories/%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C/"/>
    
    
      <category term="publishing" scheme="https://slim8020.github.io/tags/publishing/"/>
    
      <category term="web" scheme="https://slim8020.github.io/tags/web/"/>
    
      <category term="css" scheme="https://slim8020.github.io/tags/css/"/>
    
      <category term="html" scheme="https://slim8020.github.io/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>웹 퍼블리싱에서 중요하다고 생각 되는 것</title>
    <link href="https://slim8020.github.io/2021/04/23/Essay_webpubl/"/>
    <id>https://slim8020.github.io/2021/04/23/Essay_webpubl/</id>
    <published>2021-04-23T02:13:03.000Z</published>
    <updated>2021-05-13T01:51:56.228Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/Thumbnail/publishing.png" alt=""></p><p>웹 퍼블리싱에서 중요하다고 생각 되는 몇가지를 정리한다. 이에 따라 수련하면 좋을 것 같다.</p><ol><li><p>속도 :</p><ul><li>개발 환경의 단축키 사용에 익숙해지는 것 &gt; vscode 단축키 연습</li><li>그때 그때 필요한 태그 및 스타일을 기억하고 있다가 바로 사용이 가능 할 것</li><li><p>스타일링의 기본 원리를 이해 하고 있는 것 ( 선택자, 스타일 우선순위 )</p><p>많이 만들어 보고 항상 시간을 측정하는 연습을 하면 좋을 것 같음.</p></li></ul></li><li><p>꼼꼼함 : </p><ul><li>충분한 테스트 (오타로 인한 버그를 찾는데 시간을 많이 보내게 된다.) &gt; style lint 를 이용하는게 좋을 것 같음.</li><li>분석 및 테스트 도구에 대한 사용법 숙지</li></ul></li><li><p>효율적인 코드:</p><ul><li>bundler 를 사용하여 파일의 최적화</li><li>minify 를 적용하여 코드 용량 줄이기</li><li>가독성이 떨어지지 않도록 클래스, ID 등의 네이밍 규칙 지정</li><li>스타일 가이드 페이지 작성</li><li>사전 sitemap 작성 </li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/Thumbnail/publishing.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;웹 퍼블리싱에서 중요하다고 생각 되는 몇가지를 정리한다. 이에 따라 수련하면 좋을 것 같다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;속도 :&lt;/p&gt;
&lt;ul&gt;
      
    
    </summary>
    
      <category term="에세이" scheme="https://slim8020.github.io/categories/%EC%97%90%EC%84%B8%EC%9D%B4/"/>
    
    
      <category term="Webpublishing" scheme="https://slim8020.github.io/tags/Webpublishing/"/>
    
      <category term="Essay" scheme="https://slim8020.github.io/tags/Essay/"/>
    
      <category term="HTML" scheme="https://slim8020.github.io/tags/HTML/"/>
    
      <category term="CSS" scheme="https://slim8020.github.io/tags/CSS/"/>
    
      <category term="Training" scheme="https://slim8020.github.io/tags/Training/"/>
    
  </entry>
  
  <entry>
    <title>NPM 사용 가이드 총정리 (설치부터 삭제까지..)</title>
    <link href="https://slim8020.github.io/2021/04/20/NPM/"/>
    <id>https://slim8020.github.io/2021/04/20/NPM/</id>
    <published>2021-04-20T07:22:44.000Z</published>
    <updated>2021-05-13T01:51:56.230Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/Thumbnail/npm.png" alt=""></p><h2 id="NPM-은-무엇인가"><a href="#NPM-은-무엇인가" class="headerlink" title="NPM 은 무엇인가?"></a>NPM 은 무엇인가?</h2><p>NPM(Node Package Manager)은 Node 로 만들어진 패키지를 관리하는 도구이다.<br>개발 시 필요한 컴포넌트, 프레임워크, 라이브러리 등등 여러 가지를 다운 받아서 개발하고자 하는 웹사이트에 반영할 수 있도록 제공하는 도구 이다.<br>NPM 웹사이트(<a href="https://www.npmjs.com/)를" target="_blank" rel="noopener">https://www.npmjs.com/)를</a> 통해서 패키지를 검색하고 CLI (Command-Line Interface) 를 통해 패키지를 다운로드 받고, 설치하고, 업데이트 할 수 있다. </p><p><img src="/img/AboutNPM/NPM.png" alt="NPM 웹사이트"></p><h2 id="NPM은-어떻게-설치-해야-하는가"><a href="#NPM은-어떻게-설치-해야-하는가" class="headerlink" title="NPM은 어떻게 설치 해야 하는가?"></a>NPM은 어떻게 설치 해야 하는가?</h2><p>NPM 은 Node.js (<a href="https://nodejs.org/)에" target="_blank" rel="noopener">https://nodejs.org/)에</a> 포함 되어 있다. 따라서 Node.js 를 설치하면 된다.</p><p><img src="/img/AboutNPM/node.png" alt="Node 다운로드"></p><p>어떤 버전의 Node 가 설치 되어 있는지 확인 하는 방법은 아래와 같다.</p><pre><code>node -v</code></pre><p>어떤 버전의 NPM 이 설치 되어 있는지도 확인 할 수 있다.</p><pre><code>npm -v</code></pre><p>결과<br><img src="/img/AboutNPM/npm_node.png" alt="NPM 버전"></p><h2 id="NPM-Package"><a href="#NPM-Package" class="headerlink" title="NPM Package"></a>NPM Package</h2><p><img src="/img/AboutNPM/NPM_detail.png" alt="NPM Package"></p><p>오른쪽에 얼마나 유명한지, 퀄리티는 어떤지, 유지보수는 잘 되는지를 표시 해 주고 있다.</p><h2 id="NPM-Package-찾기"><a href="#NPM-Package-찾기" class="headerlink" title="NPM Package 찾기"></a>NPM Package 찾기</h2><p>npm 웹사이트에서 필요로 하는 패키지를 검색한다.</p><p><img src="/img/AboutNPM/npm_search.png" alt="NPM search"></p><p>Package 를 찾았으면 패키지의 자세한 정보(주간 다운로드 수, 버전, 라이센스, git 리포지토리, 패키지 사용방법 등)를 확인 할 수 있다. </p><p><img src="/img/AboutNPM/npm_search_detail.png" alt="NPM search detail"></p><h2 id="NPM-으로-개발-환경-만들기"><a href="#NPM-으로-개발-환경-만들기" class="headerlink" title="NPM 으로 개발 환경 만들기"></a>NPM 으로 개발 환경 만들기</h2><p>우선 개발환경을 꾸미고 싶은 폴더를 생성하고 해당 폴더에 진입한다.</p><pre><code>mkdir npmtestcd npmtest</code></pre><p>아래 명령어를 입력한다.</p><pre><code>npm init -y</code></pre><p>package.json 파일이 생성된다.</p><p><img src="/img/AboutNPM/npm_init.png" alt="NPM init"></p><p>하단에서 설명하겠지만 우선 Package 를 하나 설치 한다. (따라 해 보기)</p><pre><code>npm install lodash</code></pre><p>package-lock.json 파일과 함께, node_modules 폴더가 생성된다.</p><p><img src="/img/AboutNPM/npm_package_lock.png" alt="NPM init"></p><p><span style="color:red"> package.json 과 package-lock.json 의 자세한 설명은 별도로.. </span></p><h2 id="NPM-Package-설치-방법"><a href="#NPM-Package-설치-방법" class="headerlink" title="NPM Package 설치 방법"></a>NPM Package 설치 방법</h2><pre><code>npm install 패키지 이름</code></pre><p>예) npm install lodash</p><p>결과)<br><img src="/img/AboutNPM/npm_install.png" alt="NPM install"></p><p>옵션 -g 를 쓰면 해당 폴더만이 아닌 시스템 어디서든 패키지를 사용할 수 있다.</p><h2 id="NPM-Pakcage-업데이트-하는-방법"><a href="#NPM-Pakcage-업데이트-하는-방법" class="headerlink" title="NPM Pakcage 업데이트 하는 방법"></a>NPM Pakcage 업데이트 하는 방법</h2><pre><code>npm update 패키지명</code></pre><p>예) npm update lodash</p><p>설치된 패키지를 한꺼번에 업데이트 하려면?</p><pre><code>npm update --save </code></pre><p>업데이트가 됐는지 확인 해 보려면?</p><pre><code>npm outdated</code></pre><p>업데이트 전<br><img src="/img/AboutNPM/NPM_before.png" alt="NPM outdated"></p><p>업데이트 후<br><img src="/img/AboutNPM/NPM_after.png" alt="NPM outdated"></p><h2 id="설치된-NPM-Package-를-알아보기"><a href="#설치된-NPM-Package-를-알아보기" class="headerlink" title="설치된 NPM Package 를 알아보기"></a>설치된 NPM Package 를 알아보기</h2><pre><code>npm list </code></pre><p><img src="/img/AboutNPM/npm_list.png" alt="NPM list"></p><p>패키지에 포함된 패키지들도 모두 나오므로 보기 힘들다.</p><pre><code>npm list --depth=0</code></pre><p>최상단 패키지 이름만 나온다.</p><h2 id="NPM-Package-삭제-하는-방법"><a href="#NPM-Package-삭제-하는-방법" class="headerlink" title="NPM Package 삭제 하는 방법"></a>NPM Package 삭제 하는 방법</h2><p>설치한 패키지 중에 더 이상 사용하지 않거나, 잘못 설치한 경우 삭제 할 수 있다.</p><pre><code>npm uninstall 패키지명</code></pre><p>예) npm uninstall lodash</p><p>결과)<br><img src="/img/AboutNPM/npm_uninstall.png" alt="NPM uninstall"></p><p>패키지가 삭제 되었는지 list 를 사용하여 확인 할 수 있다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/Thumbnail/npm.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;NPM-은-무엇인가&quot;&gt;&lt;a href=&quot;#NPM-은-무엇인가&quot; class=&quot;headerlink&quot; title=&quot;NPM 은 무엇인가?&quot;&gt;&lt;/a&gt;NPM 은 
      
    
    </summary>
    
      <category term="프론트엔드" scheme="https://slim8020.github.io/categories/%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C/"/>
    
    
      <category term="NPM" scheme="https://slim8020.github.io/tags/NPM/"/>
    
      <category term="NODE" scheme="https://slim8020.github.io/tags/NODE/"/>
    
  </entry>
  
  <entry>
    <title>Adobe XD 플러그인 개발 시작 하기</title>
    <link href="https://slim8020.github.io/2019/08/16/FirstXDPlugin/"/>
    <id>https://slim8020.github.io/2019/08/16/FirstXDPlugin/</id>
    <published>2019-08-16T02:13:03.000Z</published>
    <updated>2021-05-13T01:51:56.229Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/Thumbnail/adobexd.png" alt=""></p><h1 id="전제-조건"><a href="#전제-조건" class="headerlink" title="전제 조건"></a>전제 조건</h1><p>아래와 같은 버전을 기준으로 XD 플러그인 개발 방법을 설명한다.</p><ul><li>개발환경 : Adob XD 22.0</li></ul><p>Adobe XD 플러그인을 개발하기 위해서는 기본적으로 HTML, CSS, Javascript 에 대한 기본 지식이 필요하다.</p><h1 id="Adobe-계정-생성"><a href="#Adobe-계정-생성" class="headerlink" title="Adobe 계정 생성"></a>Adobe 계정 생성</h1><p>Adobe 에 가입하고 계정을 만든다.</p><h1 id="플러그인-생성"><a href="#플러그인-생성" class="headerlink" title="플러그인 생성"></a>플러그인 생성</h1><ol><li>해당 경로 (<a href="https://console.adobe.io/plugins" target="_blank" rel="noopener">https://console.adobe.io/plugins</a>) 에 접속한다.</li><li>Create Plugin 을 클릭한다. </li><li>스타터 플러그인이 생성 되면 다운로드 받는다.</li></ol><h1 id="플러그인-개발-버전-설치"><a href="#플러그인-개발-버전-설치" class="headerlink" title="플러그인 개발 버전 설치"></a>플러그인 개발 버전 설치</h1><p>다운받은 스타터 플러그인으로 XD에 설치하여 바로 확인해 볼 수 있다.<br>스타터 플러그인을 설치하면 Hello 라는 플러그인 항목과 함께 실행 시키면 보라색 사각형이 그려진다.</p><p><img src="/img/FirstXDPlugin/adobeXDDevelopFolder.png" alt="개발 폴더 표시"></p><p>설치 방법은 플러그인 &gt; 개발 &gt; 개발 폴더 표시 후에, 다운로드 받은 파일의 압축을 해당 폴더에 풀어 놓으면 된다.<br>그리고 플러그인 리로드를 수행한다.</p><h1 id="플러그인-리로드"><a href="#플러그인-리로드" class="headerlink" title="플러그인 리로드"></a>플러그인 리로드</h1><p>플러그인을 수정 후에는 리로드를 수행 하여 변경 사항을 반영 해야 한다.<br><img src="/img/FirstXDPlugin/adobeXDReload.PNG" alt="플러그인 리로드"></p><h1 id="디버깅"><a href="#디버깅" class="headerlink" title="디버깅"></a>디버깅</h1><p>Adobe XD 에서 기본적으로 제공하는 디버깅 방법은 콘솔로 로그를 표시하는 방식이다.<br>js 파일에 아래와 같이 코드를 추가하면 코드 상에서 필요한 지점의 결과 값을 콘솔로 볼 수 있다.</p><p align="center"><br><font color="#1f1f1f"><b>console.log(“Say Hello!”);</b></font><br></p><p><img src="/img/FirstXDPlugin/DevelopConsole.png" alt="개발자 콘솔"></p><h1 id="폴더-구조"><a href="#폴더-구조" class="headerlink" title="폴더 구조"></a>폴더 구조</h1><ul><li>main.js : 동작에 대한 로직 구현</li><li>manifest.json : 플러그인의 이름, 메뉴 구조를 설정</li></ul><p>출처 : <a href="https://adobexdplatform.com/plugin-docs/tutorials/quick-start/" target="_blank" rel="noopener">https://adobexdplatform.com/plugin-docs/tutorials/quick-start/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/Thumbnail/adobexd.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;전제-조건&quot;&gt;&lt;a href=&quot;#전제-조건&quot; class=&quot;headerlink&quot; title=&quot;전제 조건&quot;&gt;&lt;/a&gt;전제 조건&lt;/h1&gt;&lt;p&gt;아래와 같
      
    
    </summary>
    
      <category term="플러그인개발" scheme="https://slim8020.github.io/categories/%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%EA%B0%9C%EB%B0%9C/"/>
    
    
      <category term="AdobeXD" scheme="https://slim8020.github.io/tags/AdobeXD/"/>
    
      <category term="Plugin" scheme="https://slim8020.github.io/tags/Plugin/"/>
    
      <category term="Development" scheme="https://slim8020.github.io/tags/Development/"/>
    
      <category term="어도비XD" scheme="https://slim8020.github.io/tags/%EC%96%B4%EB%8F%84%EB%B9%84XD/"/>
    
      <category term="플러그인" scheme="https://slim8020.github.io/tags/%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8/"/>
    
      <category term="개발" scheme="https://slim8020.github.io/tags/%EA%B0%9C%EB%B0%9C/"/>
    
  </entry>
  
  <entry>
    <title>비기능 요구 테스트 (Non-Functional Test)</title>
    <link href="https://slim8020.github.io/2019/08/10/SoftwareTest_nonFunctional/"/>
    <id>https://slim8020.github.io/2019/08/10/SoftwareTest_nonFunctional/</id>
    <published>2019-08-10T14:13:03.000Z</published>
    <updated>2021-05-13T01:51:56.234Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/Thumbnail/nonfunctional.png" alt=""></p><p>이 포스트는 “지식 제로부터 배우는 소프트웨어 테스트”를 읽고 학습한 내용입니다.</p><p>우리 팀은 테스트를 그렇게 잘하는 팀은 아니다. 테스트를 전혀 모르는 신입 한 명이 테스터의 전부다.<br>나도 개발자 출신이라 그동안에 테스트 활동을 옆에서만 지켜 봤지, 실제로 테스트를 수행 해 본적은 없다. 그래도 들은 풍월은 있어서 기능 요구 테스트와 비기능 요구 테스트를 각각 수행은 하고 있다.</p><p>이 책을 읽기 전에는 기능 요구 테스트는 단순히 기능별로 나눈 케이스로 테스트를 진행 했고, 비기능 요구 테스트는 최근에서야 소프트웨어의 동작 성능을 체크하는 수준이다. </p><p>이번에는 이 책에서 말하는 가장 어려운 테스트인 비기능 요구 테스트에 대해서 정리 해 보도록 하겠다.</p><h2 id="비기능-요구-테스트란"><a href="#비기능-요구-테스트란" class="headerlink" title="비기능 요구 테스트란?"></a>비기능 요구 테스트란?</h2><p>비기능 요구 테스트는 기능이 아닌 부분, 즉 품질 특성을 테스트하는 것을 말한다. 그렇다면 품질 특성에는 어떤 것들이 있을까? 아래 표(ISO 9126 품질 특성)와 같다.<br><img src="/img/SoftwareTest_NonFunctional/non-functionaltest.PNG" alt="ISO 9126 품질특성"></p><p>소프트웨어 아키텍트에게 설문한 결과 이 중에서 중요한 특성은 보안성, 신뢰성, 효율성 이라고 한다.<br>이 특성들을 모두 만족하는 것은 무리이며, 특성 간은 각각 Trade-off 관계라고 말하고 있다. </p><h2 id="성능-테스트-Performance-Test-란"><a href="#성능-테스트-Performance-Test-란" class="headerlink" title="성능 테스트(Performance Test) 란?"></a>성능 테스트(Performance Test) 란?</h2><p> 소프트웨어를 설계하거나 기획하는 단계에서 설정된 소프트웨어의 성능이 기대한 대로 나오는가를 확인하기 위한 테스트이다. (우리 팀에서도 성능 테스트를 종종 하는데, 주로 하는 것이 소프트웨어 로딩 시간 체크 이다.) 성능 테스트도 비기능 요구 테스트의 일부이다.</p><h3 id="성능-테스트시-주의-사항"><a href="#성능-테스트시-주의-사항" class="headerlink" title="성능 테스트시 주의 사항"></a>성능 테스트시 주의 사항</h3><ol><li><p>성능의 정의는 명확하게 해야 한다.<br>예를 들어<br> 30MB 를 처리할 때 1분 이내로 되어야 한다<br> 10MB 의 파일을 열 때 10초 이상이 걸리면 안된다<br> 소프트웨어를 실행 시키면 로딩 시간이 1분 이내로 모든 초기 작업을 완료 해야 한다<br>와 같은 정의가 명확해야 한다.</p></li><li><p>요구 정의대로만 테스트 케이스를 작성해서는 안된다.<br>테스트는 버그를 찾는 작업 이므로 요구가 정의 된 대로만 테스트가 수행이 되면 아무 의미가 없다.</p></li><li><p>성능 테스트는 미루지 말아야 한다.<br>성능 테스트에서 발견되는 버그는 최악의 버그다. 문제가 심한 경우 소프트웨어 구조 자체를 변경해야 하는 경우까지도 있을 수 있으므로 어느 정도 소프트웨어가 동작하는 시점에서는 수행하는 것이 좋다. </p></li></ol><h3 id="성능-테스트-5-단계-이-부분은-책에도-내용이-별로-없다"><a href="#성능-테스트-5-단계-이-부분은-책에도-내용이-별로-없다" class="headerlink" title="성능 테스트 5 단계 ( 이 부분은 책에도 내용이 별로 없다. )"></a>성능 테스트 5 단계 ( 이 부분은 책에도 내용이 별로 없다. )</h3><ol><li><p>아키텍처 검증<br>소프트웨어의 아키텍처 측면의 스펙을 검토 한다. 예를 들어 우리 팀의 경우 electron 기반의 데스크탑 앱을 만들고 있는데, electron 자체에서 지원하는 스펙이 동작하는데 적합한지를 확인 해야 한다.</p></li><li><p>성능 벤치 마크<br>실제 개발된 소프트웨어를 테스트 하는 것을 말한다. 소프트웨어의 로딩 시간을 측정 한다든가 하는 활동을 말한다.</p></li><li><p>성능 회귀 테스트<br>이 테스트는 프로그램 개발 도중에 항상 변하는 상태에서 수행 하는 것을 말한다. 기능 수정이 이루어진 부분만 테스트하는 것이 아니라, 기존에 확인 했던 다른 부분도 확인을 해 줘야 한다.</p></li><li><p>성능 튜닝 및 엑셉턴스 테스트<br>최종 제품이 요구 정의에 정해진 성능을 내는지 확인하는 것을 말한다.</p></li><li><p>24x7 성능 모니터링<br>실제 사용 하는 데이터로 테스트가 불 가능 할 경우 더미 데이터로 검토 하라는 이야기인데.. 왜 24x7 성능 모니터링인지… 모르겠다.</p></li></ol><p>나는 성능 테스트에 대해서는 크게 인사이트를 얻을 수 없었다.</p><h2 id="신뢰성-테스트"><a href="#신뢰성-테스트" class="headerlink" title="신뢰성 테스트"></a>신뢰성 테스트</h2><p>소프트웨어의 신뢰성을 측정 하려면 신뢰도 성장 곡선을 그려야 한다. 여기서 의미 있는 개념은 평균고장간격 (Mean Time Between Failure : MTBF ) 이라는 것인데, 단위 시간당 어느 정도의 Failure (버그나 시스템 멈춤, 재부팅)을 일으키는지 측정하는 것이다. 이를 통해 신뢰성을 판단 할 수 있다고 한다.<br>예를 들어 어떤 소프트웨어를 테스트 해서 평균 5시간 정도 조작하면 결국 느려진다던가 멈춘다거나 한다면 MTBF 는 5시간 이다. 그렇다면 소프트웨어의 요구 정의에서 MTBF 가 24시간 이상 되어야 한다 라고 하면 신뢰성 테스트의 기준이 될 것 같다. </p><p>그리고 신뢰도 성장 곡선에 대한 내용이 나오는데, 신뢰도 성장 곡선은 아래 수식으로 그릴 수 있다.</p><p>m(t) : 시간 축에 대한 신뢰성<br>a : 기대 하는 장애(버그)의 총 수<br>b : 버그 발견율<br>t : 테스트 실행 시간</p><p>최종적으로는 테스트 케이스 실행에 대해 버그 곡선을 그리는 것이 거의 의미가 없다고 말하고 있다.<br>(왜 설명한거지..)</p><p>일단은 그냥 이런 것이 있다 정도로 넘어가야 겠다. 설명도 명확치 않을 뿐 더러 어떻게 활용 해야 할지도 사실상 의문이다. 이 부분에 대해서는 다른 책을 좀 더 읽어보고 공부 하는 것으로 하겠다.  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/Thumbnail/nonfunctional.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;이 포스트는 “지식 제로부터 배우는 소프트웨어 테스트”를 읽고 학습한 내용입니다.&lt;/p&gt;
&lt;p&gt;우리 팀은 테스트를 그렇게 잘하는 팀은 아니다
      
    
    </summary>
    
      <category term="소프트웨어테스트" scheme="https://slim8020.github.io/categories/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%85%8C%EC%8A%A4%ED%8A%B8/"/>
    
    
      <category term="SoftwareTest" scheme="https://slim8020.github.io/tags/SoftwareTest/"/>
    
      <category term="Test" scheme="https://slim8020.github.io/tags/Test/"/>
    
      <category term="소프트웨어테스트" scheme="https://slim8020.github.io/tags/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%85%8C%EC%8A%A4%ED%8A%B8/"/>
    
      <category term="NonFunctional" scheme="https://slim8020.github.io/tags/NonFunctional/"/>
    
      <category term="PerformanceTest" scheme="https://slim8020.github.io/tags/PerformanceTest/"/>
    
      <category term="비기능테스트" scheme="https://slim8020.github.io/tags/%EB%B9%84%EA%B8%B0%EB%8A%A5%ED%85%8C%EC%8A%A4%ED%8A%B8/"/>
    
      <category term="성능테스트" scheme="https://slim8020.github.io/tags/%EC%84%B1%EB%8A%A5%ED%85%8C%EC%8A%A4%ED%8A%B8/"/>
    
  </entry>
  
  <entry>
    <title>탐색적 테스트(Exploratory Test)</title>
    <link href="https://slim8020.github.io/2019/08/09/SoftwareTest_.ExploratoryTesting/"/>
    <id>https://slim8020.github.io/2019/08/09/SoftwareTest_.ExploratoryTesting/</id>
    <published>2019-08-09T14:13:03.000Z</published>
    <updated>2021-05-13T01:51:56.231Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/Thumbnail/exploratory.png" alt=""></p><p>이 포스트는 “지식 제로부터 배우는 소프트웨어 테스트”를 읽고 학습한 내용입니다.</p><h1 id="탐색적-테스트"><a href="#탐색적-테스트" class="headerlink" title="탐색적 테스트"></a>탐색적 테스트</h1><p>지난 포스트에서 소개한 화이트 박스 테스트와 블랙 박스 테스트는 테스트 케이스 기반 테스트이다.<br>좀 더 쉽게 설명하면 테스트 케이스를 설계하고 테스트를 진행하는 형태의 테스트 방식이다.<br>이번에 소개하는 탐색적 테스트는 생각하며 테스트 하기 방식이다. </p><p>지난 포스트에서 “똑똑하지 않은 테스트를 시간만 많이 들인다고 소프트웨어 품질이 올라가지는 않는다”고 이야기 하자마자 보다 똑똑하게 테스트 하는 방법에 대해서 소개를 하고 있다.</p><h2 id="탐색적-테스트란"><a href="#탐색적-테스트란" class="headerlink" title="탐색적 테스트란?"></a>탐색적 테스트란?</h2><p>말 그대로 탐색 하면서 테스트를 진행하는 것이다. 반복하지만 생각하면서 테스트 하기 이다.<br>이 테스트 기법의 핵심은 소프트웨어의 특정 부분에 버그들이 집중되어 분포한다 라는 특성을 이용한 테스트 기법이다.</p><p>탐색적 테스트는 1983년에  Cem Kaner 교수가 제안한 방법인데, 그는 저자의 스승이라고 한다.<br>그는 이렇게 말했다.<br>탐색적 테스트는 소프트웨어 테스트 이해와 테스트 설계와<br>테스트 실행을 동시에 수행하는 테스트이다.<br><img src="/img/SoftwareTest_Exploratory/compare.PNG" alt="테스트 케이스 기반 테스트 vs 탐색적 테스트"></p><p>이 책에서는 테스트 케이스 실행으로 발견할 수 있는 버그는 전체의 50% 이하 일 것이라고 한다.<br>그럴 거라면 차라리 테스트 케이스를 일일이 사전에 작성하는 것보다는 생각하면서 소프트웨어를 테스트 하는 것이 낫다.</p><h3 id="테스트-케이스-기반-테스트의-단점"><a href="#테스트-케이스-기반-테스트의-단점" class="headerlink" title="테스트 케이스 기반 테스트의 단점"></a>테스트 케이스 기반 테스트의 단점</h3><ol><li><p>프로젝트 초기 단계에 테스트 케이스를 작성하려고 해도 대상이 되는 소프트웨어가 없으므로 어림짐작으로 케이스를 작성하는 경우가 많다. 최악의 경우 요구 사항을 나열 해 놓은 테스트 케이스가 작성된다. ( 우리 프로젝트의 경우 그런 경우가 많았다. )<br>요구사항이 명확치 않으므로 경계값 또한 모호하여 제대로 된 경계값 분석 조차 이루어지지 않는다.</p></li><li><p>너무 이른 테스트 케이스 작성은 소프트웨어 테스트 공수의 현저한 증가를 가져온다.</p></li><li><p>테스트 케이스 기반 테스트는 아래 두 가지가 결여되어 있다.<br> 가. 테스트를 실행하면서 어딘가 다른 부분에 문제가 없는지를 생각 해 보고 그 곳을 테스트 하는 것<br> 나. 소프트웨어에서 약한 부분을 발견 했다면 그곳의 집중적 테스트<br> 결과적으로 중요도나, 심각도, 버그 분포에 대한 고려가 없는 테스트이므로 비효율적이다.</p></li></ol><h2 id="탐색적-테스트-수행-방법"><a href="#탐색적-테스트-수행-방법" class="headerlink" title="탐색적 테스트 수행 방법"></a>탐색적 테스트 수행 방법</h2><ol><li><p>기준(Criteria)의 결정<br>탐색적 테스트 수행 전에 어떤 소프트웨어야 하는지에 관한 기준을 정해야 한다. 아래 표는 해당 예이다.<br><img src="/img/SoftwareTest_Exploratory/Criteria.PNG" alt="기준의 결정"></p></li><li><p>탐색적 테스트 수행<br>탐색적 테스트 수행은 아래의 다섯 가지 단계로 이루어진다.<br>가. 대상 소프트웨어를 정함.<br>나. 기능을 목록화 함.<br>다. 해당 기능들을 조사하여 약한 부분을 발견.<br>라. 각 기능을 테스트 하고 버그를 기록<br>마. 계속적인 테스트 실행</p></li></ol><h3 id="탐색적-테스트의-단점"><a href="#탐색적-테스트의-단점" class="headerlink" title="탐색적 테스트의 단점"></a>탐색적 테스트의 단점</h3><p>비기능 요구 테스트에 어울리지 않는다. 예외가 있다면 사용성(Usability)테스트이다. </p><p>테스트의 효율을 극대화 하기 위해서는..</p><p>일반적인(기술적인 이해도나 깊이가 없는) 테스터가 탐색적 테스트를 수행 하였을 경우에는 코드 커버리지가 테스트 케이스 기반의 테스트나 별반 차이가 없다.<br><img src="/img/SoftwareTest_Exploratory/before.jpg" alt="이해도가 없을 경우"></p><p>하지만 일반적인 테스터에게 개발자가 프로그램의 구조를 설명해 주고 테스트를 하면 아래와 같은 그래프가 나온다.<br><img src="/img/SoftwareTest_Exploratory/after.jpg" alt="이해도가 생긴 경우"></p><p>따라서 탐색적 테스트 + 기술을 갖춘 테스트 담당자의 조합이라면 짧은 시간에 최대의 결과를 얻을 수 있다.</p><h2 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h2><p>소프트웨어 설계 회의 시에 테스터를 참석 시키거나, 소프트웨어 설계가 완료 되었을 때 테스터에게 그 구조에 대해서 자세히 설명 해 준다면 탐색적 테스트를 수행하여 보다 나은 품질의 소프트웨어를 얻을 수 있다.또한 테스트의 스타일과 방법은 다양하다. 그 스타일과 방법을 적재적소에 적용할 수 있는가가 테스트의 성과를 좌우한다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/Thumbnail/exploratory.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;이 포스트는 “지식 제로부터 배우는 소프트웨어 테스트”를 읽고 학습한 내용입니다.&lt;/p&gt;
&lt;h1 id=&quot;탐색적-테스트&quot;&gt;&lt;a href=&quot;#탐색적
      
    
    </summary>
    
      <category term="소프트웨어테스트" scheme="https://slim8020.github.io/categories/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%85%8C%EC%8A%A4%ED%8A%B8/"/>
    
    
      <category term="SoftwareTest" scheme="https://slim8020.github.io/tags/SoftwareTest/"/>
    
      <category term="Test" scheme="https://slim8020.github.io/tags/Test/"/>
    
      <category term="ExploratoryTest" scheme="https://slim8020.github.io/tags/ExploratoryTest/"/>
    
      <category term="탐색적테스트" scheme="https://slim8020.github.io/tags/%ED%83%90%EC%83%89%EC%A0%81%ED%85%8C%EC%8A%A4%ED%8A%B8/"/>
    
      <category term="소프트웨어테스트" scheme="https://slim8020.github.io/tags/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%85%8C%EC%8A%A4%ED%8A%B8/"/>
    
  </entry>
  
  <entry>
    <title>화이트박스 테스트와 블랙박스 테스트</title>
    <link href="https://slim8020.github.io/2019/08/08/SoftwareTest_WhiteBox_BlackBox/"/>
    <id>https://slim8020.github.io/2019/08/08/SoftwareTest_WhiteBox_BlackBox/</id>
    <published>2019-08-08T14:13:03.000Z</published>
    <updated>2021-05-13T01:51:56.233Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/Thumbnail/blackbox.png" alt=""></p><p>이번 포스팅에서는 화이트 박스 테스트와 블랙 박스 테스트에 대해서 이야기 해 보고자 한다.<br>물론 “지식 제로부터 배우는 소프트웨어 테스트” 를 읽고 공부한 내용이다.</p><h2 id="화이트-박스-테스트-란-무엇인가"><a href="#화이트-박스-테스트-란-무엇인가" class="headerlink" title="화이트 박스 테스트 란 무엇인가?"></a>화이트 박스 테스트 란 무엇인가?</h2><p>소프트웨어의 내부구조를 철저하게 분석하여 논리 구조가 올바른지 분석하는 테스트를 말한다. 정의 대로 논리 구조를 검증하는 테스트이므로 소프트웨어 사양이 잘못된 것은 검증할 수 없다.<br>이 책에서는 두 가지 정도를 이야기 하고 있다.</p><p>첫째, 제어 흐름 테스트  ( 소프트웨어의 동작 흐름 테스트 )이다. 제어 흐름 테스트는 말 그대로 논리적 흐름에 대한 테스트를 하는 것을 말한다. 여기서 커버리지라는 개념이 나오는데, 사전적 의미로 “범위” 를 말한다. </p><p>커버리지는 두 가지가 있는데, 스테이트먼트 커버리지와 브랜치 커버리지 이다. 스테이트먼트 커버리지는 말그대로 명령문만 테스트 하는 것을 말한다. 이것이 무슨 의미인가?<br>예를 들어 아래 코드에서 (a) 가 동작하는 경우와 (b)가 동작하는 경우만 테스트 하는 것을 말한다.<br>테스트 케이스로 i=1 이고 k=2인 경우를 테스트하면 (a)와 (b)를 테스트 할 수 있다.</p><pre><code>if(i&gt;0){   j = i+1;   //(a)}if(k&lt;3){   j = i-1;   //(b)}</code></pre><p>하지만 그 이외의 경우 i=0 이고 k=3 인 상황은 검증이 되지 않는다</p><p>그래서 브랜치 커버리지를 확인 해야 한다.<br>브랜치 커버리지는 분기를 테스트 하는 것을 말한다. i&gt;0 조건의 True 인 상황과 False 인 상황을 검증하고 k&lt;3 조건이 True 인 상황과 False 인 상황 모두를 검증 하는 것이다.</p><p>둘째, TDD (Test Driven Development)</p><p>TDD(테스트주도개발)는 사실 개발 방법론의 하나로 알고 있다. 저자도 말하고 있는 것은 TDD의 본질은 확실하게 품질을 보증하겠다는 의미보다는 변경에 강인하고 신속한 개발을 위한 방법이라는 것이다.<br>이 부분에 대해서는 따로 공부를 해봐야겠다.</p><p>실무에서는 화이트 박스 테스트는 테스터가 하기엔 어려움이 있고, 개발자가 주로 유닛테스트를 통해 진행하는 듯하다.</p><h2 id="블랙-박스-테스트-란-무엇인가"><a href="#블랙-박스-테스트-란-무엇인가" class="headerlink" title="블랙 박스 테스트 란 무엇인가?"></a>블랙 박스 테스트 란 무엇인가?</h2><p>블랙 박스 테스트는 프로그램을 일종의 블랙박스로 보고 다양한 입력을 실행함으로써 소스 코드를 이용하지 않고 테스트를 수행 하는 방법이다. 대부분의 실무에서 블랙박스 테스트 방법을 수행하고 있다.<br>블랙 박스 테스트의 기본적인 방법으로 등가 분할과 경계값 분석이 있다.</p><pre><code>if( a &gt;0 &amp;&amp; a &lt;100 &amp;&amp; b&gt;0 &amp;&amp; b&lt;100 ){    c = a*b;}else{    // input error}</code></pre><p>등가분할</p><p>‘등가분할’ 이란 입력 영역을 ‘등가 클래스’라는 부분 집합으로 분할 하고, 그 부분 집합에서 선택한 입력값을 모두 같은 값(등가)라고 보는 작업이다.</p><p>예를 들어 입력 A 를 1~99 까지 입력 가능하고, 입력 B 를 1~ 99 까지 입력이 가능 하다고 가정 할 때<br>출력 C = A <em>B 의 결과 출력하는 프로그램이 있다고 하자.<br>여기서 입력 할 수 있는 값을  A,B 모두 1~99 까지다. 사실상 1~99 사이의 어느 값 하나씩만 넣어 보면 c = a</em>b 의 결과는 동일하게 출력 된다. 이 부분을 유효 등가라고 하고 -1 을 입력 하거나 100 이상을 입력 하였을 경우는 에러가 된다. 이를 무효 등가라고 부른다.</p><p>유효 등가 클래스와 무효 등가 클래스로 각각 케이스를 만들어 보자.<br><img src="/img/SoftwareTest_White_Black/Equivalence_Partitioning.png" alt="등가분할 케이스"></p><p>유효 등가 테스트 케이스<br>(1) A=50 B=50</p><p>무효 등가 테스트 케이스<br>(2) A = -1, B = -1<br>(3) A = -2, B = 101<br>(4) A = 0, B = 50<br>(5) A = 50, B = 0<br>(6) A = 50, B = 101<br>(7) A = 101, B = 60<br>(8) A = 110, B = 110<br>(9) A = 105, B = -5<br>(10) A = 0, B = 0</p><p>총 10가지의 케이스가 나올 수 있다. 이렇게 간단한 경우에도 무효 등가가 9개나 있기 때문에 효율적으로 테스트하기 위해서는 케이스를 줄여야 한다. 저자는 이를 ‘실천적 등가 클래스 테스트(Weak Robust Equivalent Test’ 라고 부른다.<br>위의 예제에서 보면 (2)와 (8)이 무효 등가를 모두 포함하고 있음을 알 수 있다. 그래서 (1) 유효등가와 (2),(8),(10) 의 무효등가만 테스트하면 된다.( 여기서 A가 0 이고 B 가 0 인 경우는 항상 특별한 값이므로 입력할 수 있을 때는 항상 케이스에 포함하라고 한다. - 이유는 좀 알아봐야겠다. 잘 모르겠음.)</p><h2 id="경계값-분석"><a href="#경계값-분석" class="headerlink" title="경계값 분석"></a>경계값 분석</h2><p>소프트웨어에서 경계가 되는 부분의 값에 버그가 있을 확률이 높다고 한다. 그래서 이 부분을 테스트 해야 하는데 이를 경계값 분석이라고 한다. 여기서 경계가 되는 부분이라 함은 유효등가와 무효등가의 경계를 말한다. 소프트웨어에서는 무효등가와 유효등가 사이에 반드시 조건문이 필요한데, 이러한 조건문을 올바르게 작성하지 않는 경우가 있기 때문에 테스트 해야 한다고 한다.</p><h2 id="디시전-테이블-Decision-Table"><a href="#디시전-테이블-Decision-Table" class="headerlink" title="디시전 테이블 (Decision Table)"></a>디시전 테이블 (Decision Table)</h2><p>모든 입력의 조합을 표로 만든 다음에 이에 해당하는 동작이나 출력하는 방법을 말한다. 이 방법은 복잡한 상태가 얽힌 기능 테스트에 도움이 된다고 한다. 위의 예제로 디시전 테이블을 만들어 보도록 하겠다.</p><p>경우1 : A,B 모두 입력 값이 올바른 경우<br>경우2 : A는 올바른 입력이나 B 는 잘못된 입력인 경우<br>경우3 : A 는 잘못된 입력이나 B 는 올바른 입력인 경우<br>경우4 : A,B 둘다 잘못된 입력인 경우</p><p><img src="/img/SoftwareTest_White_Black/DecisionTable.png" alt="디시전 테이블"></p><p>이 방법은 단점이 있는데 아주 작은 소프트웨어거나 대규모 소프트웨어 일부분을 테스트 할 때만 사용할 수 있다. 예를 들어 1000개의 넘는 항목일 경우는 경우의 수가 너무 많아져서 테스트 할 수 없다.<br>대신 항목이 적고 복잡하게 움직이는 소프트웨어에 대해서는 특정 경우가 빠지는 것을 막을 수 있기 때문에 유용한 방법이다.<br>책을 읽으면서 계속 느끼는 것이지만, 하나의 소프트웨어 안에서도 기능에 따라 적합한 테스트 방법을 적용 해야 효율적인 테스트를 할 수 있다.<br>상태 전이 테스트</p><p>일반적으로 요즘 소프트웨어는 항상 같은 상태에 있는 것이 아니라 상태를 변화 시켜 소프트웨어의 조작을 쉽도록 한다. 예를 들어 워드 프로세서와 같은 프로그램에서 파일을 열기 위해 파일 열기 메뉴를 클릭 했을 때 파일 열기 대화 상자가 표시되는 것은 상태 변화 이다. 만약에 이런 상태 변화가 없다면 사용하기 매우 어려운 소프트웨어가 될 것이다.</p><p><img src="/img/SoftwareTest_White_Black/State_Transition.png" alt="메모장의 파일 열기와 파일 저장의 상태 전이"></p><p>상태 전이 테스트는 UI 를 테스트 할 때 유용한 테스트가 된다. 이 때 발견할 수 있는 버그는 기대하지 않은 상태로 전이하는 버그 ( 쌩뚱맞은 화면으로 넘어가는 버그 ), 전이 자체가 일어 나지 않는 버그 ( 화면이나 동작의 변경이 없는 버그 ) 가 있다. </p><p>마찬가지로 상태 전이 테스트도 문제점이 있는데, 상태의 수가 너무 많은 경우 테스트 항목이 너무 늘어나서 테스트 할 수 없게 된다. 게다가 모델링 시간이 너무 걸리게 되어 실제 테스트 하는 시간이 부족해 진다.  20~30개 정도의 상태 전이가 일어나는 소프트웨어는 직접 모델링 할 수 있으나, 100개 이상의 상태 전이가 일어나는 소프트웨어는 반드시 지원 도구를 사용해야 모델링에 효율을 높일 수 있다.</p><h2 id="무작위-테스트-Monkey-Test"><a href="#무작위-테스트-Monkey-Test" class="headerlink" title="무작위 테스트 ( Monkey Test )"></a>무작위 테스트 ( Monkey Test )</h2><p>아무것도 생각하지 않고 입력이나 조작을 수행하는 방법을 말한다. 에드혹(Ad-hoc) 테스트, 애드립 테스트, 무작위 테스트, 몽키 테스트 와 같이 굉장히 다양한 이름으로 불리고 있다. 그러니 누군가가 몽키 테스트 라는 것 아느냐 라고 물어 본다면 당황하지 말길..<br>이 테스트 방법도 전혀 효과가 없는 것은 아니니 빼먹지 않고 써보면 좋을 듯 하다. (의외로 많은 버그가 이 방법으로 발견되곤 한다. 소프트웨어를 이해하지 못한 사용자가 써보면 그게 무작위 테스트가 되는 것은 아닐까? 그래서 처음 사용하는 사용자가 버그를 많이 발견 해내나?)</p><p>소프트웨어 테스팅의 주요 목적은  많은 버그를 찾는 것이다. 하지만 보다 중요한 것은 효율적으로 버그를 찾는 것이다. 똑똑하지 않은 테스트를 많은 시간을 들여서 했다고 그만큼 소프트웨어의 품질이 올라가지 않는다는 뜻이다. 소프트웨어 테스팅 기법이라는 도구들로 똑똑한 테스트를 해 보자.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/Thumbnail/blackbox.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;이번 포스팅에서는 화이트 박스 테스트와 블랙 박스 테스트에 대해서 이야기 해 보고자 한다.&lt;br&gt;물론 “지식 제로부터 배우는 소프트웨어 테스트” 를 
      
    
    </summary>
    
      <category term="소프트웨어테스트" scheme="https://slim8020.github.io/categories/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%85%8C%EC%8A%A4%ED%8A%B8/"/>
    
    
      <category term="SoftwareTest" scheme="https://slim8020.github.io/tags/SoftwareTest/"/>
    
      <category term="소프트웨어테스트" scheme="https://slim8020.github.io/tags/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%85%8C%EC%8A%A4%ED%8A%B8/"/>
    
      <category term="WhiteBox" scheme="https://slim8020.github.io/tags/WhiteBox/"/>
    
      <category term="BlackBox" scheme="https://slim8020.github.io/tags/BlackBox/"/>
    
      <category term="화이트박스테스트" scheme="https://slim8020.github.io/tags/%ED%99%94%EC%9D%B4%ED%8A%B8%EB%B0%95%EC%8A%A4%ED%85%8C%EC%8A%A4%ED%8A%B8/"/>
    
      <category term="블랙박스테스트" scheme="https://slim8020.github.io/tags/%EB%B8%94%EB%9E%99%EB%B0%95%EC%8A%A4%ED%85%8C%EC%8A%A4%ED%8A%B8/"/>
    
  </entry>
  
  <entry>
    <title>테스트 케이스 만들기</title>
    <link href="https://slim8020.github.io/2019/08/07/SoftwareTest_TestCase/"/>
    <id>https://slim8020.github.io/2019/08/07/SoftwareTest_TestCase/</id>
    <published>2019-08-07T14:13:03.000Z</published>
    <updated>2021-05-13T01:51:56.232Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/Thumbnail/testcase.png" alt=""></p><p>이 포스트는 “지식 제로부터 배우는 소프트웨어 테스트”를 읽고 학습한 내용입니다.</p><h2 id="소프트웨어-테스트-지식의-필요성"><a href="#소프트웨어-테스트-지식의-필요성" class="headerlink" title="소프트웨어 테스트 지식의 필요성"></a>소프트웨어 테스트 지식의 필요성</h2><p>사회에 나오고 제일 먼저 접했던 것이 소프트웨어 테스팅이라는 것이었다. 그 때는 팀장님이 스터디해서 발표 해봐 라고 하셔서 의무적으로 공부 했었다. Validation 이니 Verification 이니 Blackbox Test 니 Whitebox Test 니 학교에서 배운 적 없는 용어들이 난무하는 이 분야에 대해서 어렵게만 생각했었다.<br>개발 경력을 쌓아 나가면서 점점 소프트웨어의 품질에 대해서 관심이 생겼고, Project Manager 이자 Product Manager가 된 이 상황에서는 필수적인 지식이 되어야 했다. ( 근데 아는 게 없다. 회사 생활하면서 테스터들이 테스트 하는 것을 본 경험과 기본 개념 정도? )</p><p>이런 상황(PM 이 될 상황)들을 예상이라도 했듯이 1년 전에 테스터의 필요성을 설파하여, 지금은 팀에 테스트를 담당하는 멤버가 있다. 하지만 테스트 담당자가 대학교를 갓 졸업한 신입이라 “테스트는 그냥 만들어진 소프트웨어를 이것저것 눌러보다 발견된 문제점을 리포트 하는 것” 이라는 생각을 가지고 있었다. 1년이 지난 지금은 아니지만..</p><p>문제는 테스트 담당자는 있는데 경력이 없어서 테스트에 대해서는 문외한이라는 점이다. 그렇다고 가르쳐 주면서 일을 할 사람도 없다. 혼자서 공부를 하면서 일을 해 나가는데 어려움을 많이 겪고 있고, 나도 테스트 업무를 지시할 때 명확하지 못한 업무를 지시하는 경우가 많았다.</p><p>그래서 뒤늦게나마 책이라도 한권 읽고 중심이라도 잡아보자 라는 심정으로 읽게 된 책이 “지식 제로부터 배우는 소프트웨어 테스트” 이다.</p><p>책을 읽고 감상평만 쓰는 것은 항상 의미가 없다라는 생각이 들어서 실전에서 적용하는 사례를  책을 읽으면서 포스팅을 해 나갈 예정이다.</p><p>일단 오늘 읽은 데 까지만 포스팅!</p><p>소프트웨어 테스트 관련 책이 다 똑같듯이 테스트가 안 되면 어떤 문제가 발생하는지에 대한 것들이 초반에 나온다. 주로 많이 나오는게 나사 이야기 인데 여기서도…그 부분은 패스하고 “소프트웨어 테스트 실력 점검” 에 대해서 한번 해보겠다.</p><h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p><img src="/img/SoftwareTest_TestCase/SoftwareTest_Question1.jpeg" alt="예시"></p><p>문제에 해당 하는 내용으로 일단 개발자 입장에서 프로그램을 작성 해 봤다.<br>Visual studio 2015 에서 C# 으로 작성 해 본 코드 이다.</p><p><img src="/img/SoftwareTest_TestCase/Code.png" alt="예제 코드"></p><h2 id="테스트-케이스"><a href="#테스트-케이스" class="headerlink" title="테스트 케이스"></a>테스트 케이스</h2><p>이제 테스터 입장에서 테스트 케이스를 설계 해 보겠다.<br>( * 테스트 케이스란 무엇인가?<br>     테스트 케이스가 무엇인지 정의한 내용을 구글에서 검색을 했는데 적당한 답을 찾지 못했다.잘 정리      해 두신 분도 있긴 한데..  내가 생각하는 정의는 “개발한 소프트웨어의 동작에 대해서 검사할 항목”        이다.)<br><img src="/img/SoftwareTest_TestCase/TC.png" alt="내가 설계한 테스트 케이스"></p><h2 id="정답은"><a href="#정답은" class="headerlink" title="정답은?"></a>정답은?</h2><p><img src="/img/SoftwareTest_TestCase/Answer.jpeg" alt="책에서 제시한 답"></p><p>몇 개의 케이스를 놓쳤다. 특히 두 변의 합이 다른 한변의 합과 같음. 두 변의 합이 다른 한변의 합보다 적음 의 경우는 기하학적 지식(?)까지 요구 하는 내용이다. 사실 테스트라는게 소프트웨어의 도메인(적용되는 분야)에 대한 지식도 요구되는 작업은 맞다. 그래서 인정!</p><p>테스트 케이스를 작성하는 것은 프로그램을 작성하는 것보다<br>실제로 더 어려운 일입니다.</p><p>작가의 말도 인정!<br>다음 포스팅에서는 화이트박스 테스트와 블랙박스 테스트에 대해서 읽고 정리 해 보려고 한다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/Thumbnail/testcase.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;이 포스트는 “지식 제로부터 배우는 소프트웨어 테스트”를 읽고 학습한 내용입니다.&lt;/p&gt;
&lt;h2 id=&quot;소프트웨어-테스트-지식의-필요성&quot;&gt;&lt;a hre
      
    
    </summary>
    
      <category term="소프트웨어테스트" scheme="https://slim8020.github.io/categories/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%85%8C%EC%8A%A4%ED%8A%B8/"/>
    
    
      <category term="SoftwareTest" scheme="https://slim8020.github.io/tags/SoftwareTest/"/>
    
      <category term="소프트웨어테스트" scheme="https://slim8020.github.io/tags/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%85%8C%EC%8A%A4%ED%8A%B8/"/>
    
      <category term="TestCase" scheme="https://slim8020.github.io/tags/TestCase/"/>
    
      <category term="테스트케이스" scheme="https://slim8020.github.io/tags/%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%BC%80%EC%9D%B4%EC%8A%A4/"/>
    
      <category term="SQA" scheme="https://slim8020.github.io/tags/SQA/"/>
    
  </entry>
  
</feed>
